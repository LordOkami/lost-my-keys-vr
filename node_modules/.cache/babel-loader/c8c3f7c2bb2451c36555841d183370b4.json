{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useXR, useController, useXRFrame } from '@react-three/xr';\nimport { Vector3 } from 'three';\nimport { useRef } from 'react'; // mapping\n// 1: Trigger\n// 2: Grip\n// 4: Stick Buttons\n// 5: A/X\n// 6: B/Y\n// axes\n// 2: XStick\n// 3: YStick\n\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MovementController(_ref) {\n  _s();\n\n  var _ref$hand = _ref.hand,\n      hand = _ref$hand === void 0 ? 'right' : _ref$hand,\n      _ref$zeroY = _ref.zeroY,\n      zeroY = _ref$zeroY === void 0 ? true : _ref$zeroY,\n      _ref$horizontalSensit = _ref.horizontalSensitivity,\n      horizontalSensitivity = _ref$horizontalSensit === void 0 ? 0.05 : _ref$horizontalSensit,\n      _ref$forwardSensistiv = _ref.forwardSensistivity,\n      forwardSensistivity = _ref$forwardSensistiv === void 0 ? 0.05 : _ref$forwardSensistiv,\n      _ref$rotationSensitiv = _ref.rotationSensitivity,\n      rotationSensitivity = _ref$rotationSensitiv === void 0 ? 0.05 : _ref$rotationSensitiv,\n      _ref$deadzone = _ref.deadzone,\n      deadzone = _ref$deadzone === void 0 ? 0.05 : _ref$deadzone,\n      _ref$horizontalAxis = _ref.horizontalAxis,\n      horizontalAxis = _ref$horizontalAxis === void 0 ? 2 : _ref$horizontalAxis,\n      _ref$forwardAxis = _ref.forwardAxis,\n      forwardAxis = _ref$forwardAxis === void 0 ? 3 : _ref$forwardAxis,\n      _ref$rotationAxis = _ref.rotationAxis,\n      rotationAxis = _ref$rotationAxis === void 0 ? 2 : _ref$rotationAxis,\n      _ref$applyForward = _ref.applyForward,\n      applyForward = _ref$applyForward === void 0 ? true : _ref$applyForward,\n      _ref$applyHorizontal = _ref.applyHorizontal,\n      applyHorizontal = _ref$applyHorizontal === void 0 ? false : _ref$applyHorizontal,\n      _ref$applyRotation = _ref.applyRotation,\n      applyRotation = _ref$applyRotation === void 0 ? true : _ref$applyRotation;\n\n  var _useXR = useXR(),\n      player = _useXR.player;\n\n  var controller = useController(hand);\n  var forward = useRef(new Vector3());\n  var horizontal = useRef(new Vector3());\n  useXRFrame(function () {\n    if (controller && player) {\n      var axes = controller.inputSource.gamepad.axes;\n      var camera = player.children[0];\n      var cameraMatrix = camera.matrixWorld.elements;\n      forward.current.set(-cameraMatrix[8], -cameraMatrix[9], -cameraMatrix[10]).normalize();\n\n      if (zeroY) {\n        forward.current.y = 0;\n        horizontal.current.y = 0;\n      }\n\n      if (applyHorizontal) {\n        horizontal.current.copy(forward.current);\n        horizontal.current.cross(camera.up).normalize();\n        player.position.add(horizontal.current.multiplyScalar((Math.abs(axes[horizontalAxis]) > deadzone ? axes[horizontalAxis] : 0) * horizontalSensitivity));\n      }\n\n      if (applyForward) {\n        player.position.add(forward.current.multiplyScalar((Math.abs(axes[forwardAxis]) > deadzone ? -axes[forwardAxis] : 0) * forwardSensistivity));\n      }\n\n      if (applyRotation) {\n        player.rotation.y -= (Math.abs(axes[rotationAxis]) > deadzone ? axes[rotationAxis] : 0) * rotationSensitivity;\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(MovementController, \"+891mjHqJUOrqVGhHq2uNjCOHpo=\", false, function () {\n  return [useXR, useController, useXRFrame];\n});\n\n_c = MovementController;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovementController\");","map":{"version":3,"sources":["/Users/lordokami/lordokami/lost-my-keys-vr/src/MovementController.js"],"names":["useXR","useController","useXRFrame","Vector3","useRef","MovementController","hand","zeroY","horizontalSensitivity","forwardSensistivity","rotationSensitivity","deadzone","horizontalAxis","forwardAxis","rotationAxis","applyForward","applyHorizontal","applyRotation","player","controller","forward","horizontal","axes","inputSource","gamepad","camera","children","cameraMatrix","matrixWorld","elements","current","set","normalize","y","copy","cross","up","position","add","multiplyScalar","Math","abs","rotation"],"mappings":"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","sourcesContent":["import { useXR, useController, useXRFrame } from '@react-three/xr';\r\n\r\nimport { Vector3 } from 'three';\r\n\r\nimport { useRef } from 'react';\r\n\r\n// mapping\r\n// 1: Trigger\r\n// 2: Grip\r\n// 4: Stick Buttons\r\n// 5: A/X\r\n// 6: B/Y\r\n\r\n// axes\r\n// 2: XStick\r\n// 3: YStick\r\n\r\nexport default function MovementController({\r\n\thand = 'right',\r\n\tzeroY = true,\r\n\thorizontalSensitivity = 0.05,\r\n\tforwardSensistivity = 0.05,\r\n\trotationSensitivity = 0.05,\r\n\tdeadzone = 0.05,\r\n\thorizontalAxis = 2,\r\n\tforwardAxis = 3,\r\n\trotationAxis = 2,\r\n\tapplyForward = true,\r\n\tapplyHorizontal = false,\r\n\tapplyRotation = true,\r\n}) {\r\n\tconst { player } = useXR();\r\n\tconst controller = useController(hand);\r\n\tconst forward = useRef(new Vector3());\r\n\tconst horizontal = useRef(new Vector3());\r\n\r\n\tuseXRFrame(() => {\r\n\t\tif (controller && player) {\r\n\t\t\tconst { axes } = controller.inputSource.gamepad;\r\n\t\t\tconst camera = player.children[0];\r\n\t\t\tconst cameraMatrix = camera.matrixWorld.elements;\r\n\r\n\t\t\tforward.current\r\n\t\t\t\t.set(-cameraMatrix[8], -cameraMatrix[9], -cameraMatrix[10])\r\n\t\t\t\t.normalize();\r\n\r\n\t\t\tif (zeroY) {\r\n\t\t\t\tforward.current.y = 0;\r\n\t\t\t\thorizontal.current.y = 0;\r\n\t\t\t}\r\n\r\n\t\t\tif (applyHorizontal) {\r\n\t\t\t\thorizontal.current.copy(forward.current);\r\n\t\t\t\thorizontal.current.cross(camera.up).normalize();\r\n\t\t\t\tplayer.position.add(\r\n\t\t\t\t\thorizontal.current.multiplyScalar(\r\n\t\t\t\t\t\t(Math.abs(axes[horizontalAxis]) > deadzone\r\n\t\t\t\t\t\t\t? axes[horizontalAxis]\r\n\t\t\t\t\t\t\t: 0) * horizontalSensitivity,\r\n\t\t\t\t\t),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (applyForward) {\r\n\t\t\t\tplayer.position.add(\r\n\t\t\t\t\tforward.current.multiplyScalar(\r\n\t\t\t\t\t\t(Math.abs(axes[forwardAxis]) > deadzone ? -axes[forwardAxis] : 0) *\r\n\t\t\t\t\t\t\tforwardSensistivity,\r\n\t\t\t\t\t),\r\n\t\t\t\t);\r\n\t\t\t}\r\n\r\n\t\t\tif (applyRotation) {\r\n\t\t\t\tplayer.rotation.y -=\r\n\t\t\t\t\t(Math.abs(axes[rotationAxis]) > deadzone ? axes[rotationAxis] : 0) *\r\n\t\t\t\t\trotationSensitivity;\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\treturn <></>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}