{"ast":null,"code":"import _assertThisInitialized from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _objectWithoutProperties from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nimport _toConsumableArray from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _createForOfIteratorHelper from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _slicedToArray from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _objectSpread from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _asyncToGenerator from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nvar _excluded = [\"foveation\", \"children\"],\n    _excluded2 = [\"children\", \"sessionInit\", \"onCreated\"],\n    _excluded3 = [\"onCreated\", \"children\", \"sessionInit\"];\nimport _regeneratorRuntime from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js\";\nimport _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport React__default, { useMemo, useContext, useRef, useEffect, forwardRef } from 'react';\nimport { useFrame, useThree, Canvas } from '@react-three/fiber';\nimport { Raycaster, Matrix4, Group, Object3D, SphereGeometry, MeshBasicMaterial, Mesh, Color, BoxBufferGeometry, Sphere, Box3 } from 'three';\nimport mergeRefs from 'react-merge-refs';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { fetchProfile, MotionController, Constants } from '@webxr-input-profiles/motion-controllers';\n\nvar ARButton = /*#__PURE__*/function () {\n  function ARButton() {\n    _classCallCheck(this, ARButton);\n  }\n\n  _createClass(ARButton, null, [{\n    key: \"createButton\",\n    value: function createButton(renderer) {\n      var sessionInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var button = document.createElement('button');\n\n      function showStartAR()\n      /*device*/\n      {\n        if (sessionInit.domOverlay === undefined) {\n          var overlay = document.createElement('div');\n          overlay.style.display = 'none';\n          document.body.appendChild(overlay);\n          var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n          svg.setAttribute('width', 38);\n          svg.setAttribute('height', 38);\n          svg.style.position = 'absolute';\n          svg.style.right = '20px';\n          svg.style.top = '20px';\n          svg.addEventListener('click', function () {\n            currentSession.end();\n          });\n          overlay.appendChild(svg);\n          var path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n          path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n          path.setAttribute('stroke', '#fff');\n          path.setAttribute('stroke-width', 2);\n          svg.appendChild(path);\n\n          if (sessionInit.optionalFeatures === undefined) {\n            sessionInit.optionalFeatures = [];\n          }\n\n          sessionInit.optionalFeatures.push('dom-overlay');\n          sessionInit.domOverlay = {\n            root: overlay\n          };\n        } //\n\n\n        var currentSession = null;\n\n        function onSessionStarted(_x) {\n          return _onSessionStarted.apply(this, arguments);\n        }\n\n        function _onSessionStarted() {\n          _onSessionStarted = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(session) {\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    session.addEventListener('end', onSessionEnded);\n                    renderer.xr.setReferenceSpaceType('local');\n                    _context.next = 4;\n                    return renderer.xr.setSession(session);\n\n                  case 4:\n                    button.textContent = 'STOP AR';\n                    sessionInit.domOverlay.root.style.display = '';\n                    currentSession = session;\n\n                  case 7:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n          return _onSessionStarted.apply(this, arguments);\n        }\n\n        function onSessionEnded()\n        /*event*/\n        {\n          currentSession.removeEventListener('end', onSessionEnded);\n          button.textContent = 'START AR';\n          sessionInit.domOverlay.root.style.display = 'none';\n          currentSession = null;\n        } //\n\n\n        button.style.display = '';\n        button.style.cursor = 'pointer';\n        button.style.left = 'calc(50% - 50px)';\n        button.style.width = '100px';\n        button.textContent = 'START AR';\n\n        button.onmouseenter = function () {\n          button.style.opacity = '1.0';\n        };\n\n        button.onmouseleave = function () {\n          button.style.opacity = '0.5';\n        };\n\n        button.onclick = function () {\n          if (currentSession === null) {\n            navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n          } else {\n            currentSession.end();\n          }\n        };\n      }\n\n      function disableButton() {\n        button.style.display = '';\n        button.style.cursor = 'auto';\n        button.style.left = 'calc(50% - 75px)';\n        button.style.width = '150px';\n        button.onmouseenter = null;\n        button.onmouseleave = null;\n        button.onclick = null;\n      }\n\n      function showARNotSupported() {\n        disableButton();\n        button.textContent = 'AR NOT SUPPORTED';\n      }\n\n      function stylizeElement(element) {\n        element.style.position = 'absolute';\n        element.style.bottom = '20px';\n        element.style.padding = '12px 6px';\n        element.style.border = '1px solid #fff';\n        element.style.borderRadius = '4px';\n        element.style.background = 'rgba(0,0,0,0.1)';\n        element.style.color = '#fff';\n        element.style.font = 'normal 13px sans-serif';\n        element.style.textAlign = 'center';\n        element.style.opacity = '0.5';\n        element.style.outline = 'none';\n        element.style.zIndex = '999';\n      }\n\n      if ('xr' in navigator) {\n        button.id = 'ARButton';\n        button.style.display = 'none';\n        stylizeElement(button);\n        navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n          supported ? showStartAR() : showARNotSupported();\n        }).catch(showARNotSupported);\n        return button;\n      } else {\n        var message = document.createElement('a');\n\n        if (window.isSecureContext === false) {\n          message.href = document.location.href.replace(/^http:/, 'https:');\n          message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n        } else {\n          message.href = 'https://immersiveweb.dev/';\n          message.innerHTML = 'WEBXR NOT AVAILABLE';\n        }\n\n        message.style.left = 'calc(50% - 90px)';\n        message.style.width = '180px';\n        message.style.textDecoration = 'none';\n        stylizeElement(message);\n        return message;\n      }\n    }\n  }]);\n\n  return ARButton;\n}();\n\nvar VRButton = /*#__PURE__*/function () {\n  function VRButton() {\n    _classCallCheck(this, VRButton);\n  }\n\n  _createClass(VRButton, null, [{\n    key: \"createButton\",\n    value: function createButton(renderer) {\n      var sessionInit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var button = document.createElement('button');\n\n      function showEnterVR()\n      /*device*/\n      {\n        var currentSession = null;\n\n        function onSessionStarted(_x2) {\n          return _onSessionStarted2.apply(this, arguments);\n        }\n\n        function _onSessionStarted2() {\n          _onSessionStarted2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(session) {\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    session.addEventListener('end', onSessionEnded);\n                    _context2.next = 3;\n                    return renderer.xr.setSession(session);\n\n                  case 3:\n                    button.textContent = 'EXIT VR';\n                    currentSession = session;\n\n                  case 5:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n          return _onSessionStarted2.apply(this, arguments);\n        }\n\n        function onSessionEnded()\n        /*event*/\n        {\n          currentSession.removeEventListener('end', onSessionEnded);\n          button.textContent = 'ENTER VR';\n          currentSession = null;\n        } //\n\n\n        button.style.display = '';\n        button.style.cursor = 'pointer';\n        button.style.left = 'calc(50% - 50px)';\n        button.style.width = '100px';\n        button.textContent = 'ENTER VR';\n\n        button.onmouseenter = function () {\n          button.style.opacity = '1.0';\n        };\n\n        button.onmouseleave = function () {\n          button.style.opacity = '0.5';\n        };\n\n        button.onclick = function () {\n          if (currentSession === null) {\n            // WebXR's requestReferenceSpace only works if the corresponding feature\n            // was requested at session creation time. For simplicity, just ask for\n            // the interesting ones as optional features, but be aware that the\n            // requestReferenceSpace call will fail if it turns out to be unavailable.\n            // ('local' is always available for immersive sessions and doesn't need to\n            // be requested separately.)\n            var optionalFeatures = [sessionInit.optionalFeatures, 'local-floor', 'bounded-floor', 'hand-tracking'].flat().filter(Boolean);\n            sessionInit.optionalFeatures = navigator.xr.requestSession('immersive-vr', _objectSpread(_objectSpread({}, sessionInit), {}, {\n              optionalFeatures: optionalFeatures\n            })).then(onSessionStarted);\n          } else {\n            currentSession.end();\n          }\n        };\n      }\n\n      function disableButton() {\n        button.style.display = '';\n        button.style.cursor = 'auto';\n        button.style.left = 'calc(50% - 75px)';\n        button.style.width = '150px';\n        button.onmouseenter = null;\n        button.onmouseleave = null;\n        button.onclick = null;\n      }\n\n      function showWebXRNotFound() {\n        disableButton();\n        button.textContent = 'VR NOT SUPPORTED';\n      }\n\n      function stylizeElement(element) {\n        element.style.position = 'absolute';\n        element.style.bottom = '20px';\n        element.style.padding = '12px 6px';\n        element.style.border = '1px solid #fff';\n        element.style.borderRadius = '4px';\n        element.style.background = 'rgba(0,0,0,0.1)';\n        element.style.color = '#fff';\n        element.style.font = 'normal 13px sans-serif';\n        element.style.textAlign = 'center';\n        element.style.opacity = '0.5';\n        element.style.outline = 'none';\n        element.style.zIndex = '999';\n      }\n\n      if ('xr' in navigator) {\n        button.id = 'VRButton';\n        button.style.display = 'none';\n        stylizeElement(button);\n        navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\n          supported ? showEnterVR() : showWebXRNotFound();\n        });\n        return button;\n      } else {\n        var message = document.createElement('a');\n\n        if (window.isSecureContext === false) {\n          message.href = document.location.href.replace(/^http:/, 'https:');\n          message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n        } else {\n          message.href = 'https://immersiveweb.dev/';\n          message.innerHTML = 'WEBXR NOT AVAILABLE';\n        }\n\n        message.style.left = 'calc(50% - 90px)';\n        message.style.width = '180px';\n        message.style.textDecoration = 'none';\n        stylizeElement(message);\n        return message;\n      }\n    }\n  }]);\n\n  return VRButton;\n}();\n\nvar XRController = {\n  make: function make(id, gl, onConnected, onDisconnected) {\n    var controller = gl.xr.getController(id);\n    var grip = gl.xr.getControllerGrip(id);\n    var hand = gl.xr.getHand(id);\n    var xrController = {\n      inputSource: undefined,\n      grip: grip,\n      controller: controller,\n      hand: hand\n    };\n    grip.userData.name = 'grip';\n    controller.userData.name = 'controller';\n    hand.userData.name = 'hand';\n    controller.addEventListener('connected', function (event) {\n      if (event.fake) {\n        return;\n      }\n\n      xrController.inputSource = event.data;\n      onConnected(xrController);\n    });\n    controller.addEventListener('disconnected', function (_) {\n      onDisconnected(xrController);\n    });\n  }\n};\n/**\n * Store data associated with some objects in the scene\n *\n * For example storing event handlers:\n *\n * objectA:\n *   onClick: [handler, handler]\n * objectB:\n *   onHover: [handler]\n *   onBlur:  [handler]\n *\n */\n\nvar ObjectsState = {\n  make: function make() {\n    return new Map();\n  },\n  add: function add(state, object, key, value) {\n    if (!state.has(object)) {\n      state.set(object, {\n        key: [value]\n      });\n    }\n\n    var entry = state.get(object);\n\n    if (!entry[key]) {\n      entry[key] = [];\n    }\n\n    entry[key].push(value);\n  },\n  delete: function _delete(state, object, key, value) {\n    var entry = state.get(object);\n    if (!entry || !entry[key]) return;\n    entry[key] = entry[key].filter(function (it) {\n      return it !== value;\n    });\n\n    if (entry[key].length === 0) {\n      delete entry[key];\n    } // Remove entry if nothing left\n\n\n    if (Object.keys(entry).length === 0) {\n      state.delete(object);\n    }\n  },\n  has: function has(state, object, key) {\n    var entry = state.get(object);\n    return !!(entry && entry[key]);\n  },\n  get: function get(state, object, key) {\n    var entry = state.get(object);\n    return entry && entry[key];\n  }\n};\n\nvar useXREvent = function useXREvent(event, handler) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      handedness = _ref.handedness;\n\n  var handlerRef = React__default.useRef(handler);\n  React__default.useEffect(function () {\n    handlerRef.current = handler;\n  }, [handler]);\n\n  var _useXR = useXR(),\n      allControllers = _useXR.controllers;\n\n  React__default.useEffect(function () {\n    var controllers = handedness ? allControllers.filter(function (it) {\n      return it.inputSource.handedness === handedness;\n    }) : allControllers;\n    var cleanups = [];\n    controllers.forEach(function (it) {\n      var listener = function listener(e) {\n        return handlerRef.current({\n          originalEvent: e,\n          controller: it\n        });\n      };\n\n      it.controller.addEventListener(event, listener);\n      cleanups.push(function () {\n        return it.controller.removeEventListener(event, listener);\n      });\n    });\n    return function () {\n      return cleanups.forEach(function (fn) {\n        return fn();\n      });\n    };\n  }, [event, allControllers, handedness]);\n};\n\nvar InteractionsContext = React__default.createContext({});\n\nfunction InteractionManager(_ref2) {\n  var children = _ref2.children;\n\n  var _useXR2 = useXR(),\n      controllers = _useXR2.controllers;\n\n  var _React__default$useSt = React__default.useState(function () {\n    return {\n      left: new Map(),\n      right: new Map(),\n      none: new Map()\n    };\n  }),\n      _React__default$useSt2 = _slicedToArray(_React__default$useSt, 1),\n      hoverState = _React__default$useSt2[0];\n\n  var _React__default$useSt3 = React__default.useState(function () {\n    return ObjectsState.make();\n  }),\n      _React__default$useSt4 = _slicedToArray(_React__default$useSt3, 1),\n      interactions = _React__default$useSt4[0];\n\n  var addInteraction = React__default.useCallback(function (object, eventType, handler) {\n    ObjectsState.add(interactions, object, eventType, handler);\n  }, [interactions]);\n  var removeInteraction = React__default.useCallback(function (object, eventType, handler) {\n    ObjectsState.delete(interactions, object, eventType, handler);\n  }, [interactions]);\n\n  var _React__default$useSt5 = React__default.useState(function () {\n    return new Raycaster();\n  }),\n      _React__default$useSt6 = _slicedToArray(_React__default$useSt5, 1),\n      raycaster = _React__default$useSt6[0];\n\n  var intersect = React__default.useCallback(function (controller) {\n    var objects = Array.from(interactions.keys());\n    var tempMatrix = new Matrix4();\n    tempMatrix.identity().extractRotation(controller.matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\n    return raycaster.intersectObjects(objects, true);\n  }, [interactions, raycaster]); // Trigger hover and blur events\n\n  useFrame(function () {\n    if (interactions.size === 0) {\n      return;\n    }\n\n    controllers.forEach(function (it) {\n      var controller = it.controller;\n      var handedness = it.inputSource.handedness;\n      var hovering = hoverState[handedness];\n      var hits = new Set();\n      var intersections = intersect(controller);\n      intersections.forEach(function (intersection) {\n        var eventObject = intersection.object;\n\n        while (eventObject) {\n          if (ObjectsState.has(interactions, eventObject, 'onHover') && !hovering.has(eventObject)) {\n            var _ObjectsState$get;\n\n            (_ObjectsState$get = ObjectsState.get(interactions, eventObject, 'onHover')) == null ? void 0 : _ObjectsState$get.forEach(function (handler) {\n              return handler({\n                controller: it,\n                intersection: intersection\n              });\n            });\n          }\n\n          hovering.set(eventObject, intersection);\n          hits.add(eventObject.id);\n          eventObject = eventObject.parent;\n        }\n      }); // Trigger blur on all the object that were hovered in the previous frame\n      // but missed in this one\n\n      var _iterator = _createForOfIteratorHelper(hovering.keys()),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var eventObject = _step.value;\n\n          if (!hits.has(eventObject.id)) {\n            var _ObjectsState$get2;\n\n            (_ObjectsState$get2 = ObjectsState.get(interactions, eventObject, 'onBlur')) == null ? void 0 : _ObjectsState$get2.forEach(function (handler) {\n              return handler({\n                controller: it\n              });\n            });\n            hovering.delete(eventObject);\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    });\n  });\n\n  var triggerEvent = function triggerEvent(interaction) {\n    return function (e) {\n      var hovering = hoverState[e.controller.inputSource.handedness];\n\n      var _iterator2 = _createForOfIteratorHelper(hovering.keys()),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var hovered = _step2.value;\n\n          var _ObjectsState$get3;\n\n          (_ObjectsState$get3 = ObjectsState.get(interactions, hovered, interaction)) == null ? void 0 : _ObjectsState$get3.forEach(function (handler) {\n            return handler({\n              controller: e.controller\n            });\n          });\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    };\n  };\n\n  useXREvent('select', triggerEvent('onSelect'));\n  useXREvent('selectstart', triggerEvent('onSelectStart'));\n  useXREvent('selectend', triggerEvent('onSelectEnd'));\n  useXREvent('squeeze', triggerEvent('onSqueeze'));\n  useXREvent('squeezeend', triggerEvent('onSqueezeEnd'));\n  useXREvent('squeezestart', triggerEvent('onSqueezeStart'));\n  var contextValue = useMemo(function () {\n    return {\n      addInteraction: addInteraction,\n      removeInteraction: removeInteraction,\n      hoverState: hoverState\n    };\n  }, [addInteraction, removeInteraction, hoverState]);\n  return /*#__PURE__*/React__default.createElement(InteractionsContext.Provider, {\n    value: contextValue\n  }, children);\n}\n\nvar useInteraction = function useInteraction(ref, type, handler) {\n  var _useContext = useContext(InteractionsContext),\n      addInteraction = _useContext.addInteraction,\n      removeInteraction = _useContext.removeInteraction;\n\n  var isPresent = handler !== undefined;\n  var handlerRef = useRef(handler);\n  useEffect(function () {\n    handlerRef.current = handler;\n  }, [handler]);\n  useEffect(function () {\n    if (!isPresent) return;\n\n    var handlerFn = function handlerFn(e) {\n      // @ts-ignore\n      handlerRef.current(e);\n    };\n\n    addInteraction(ref.current, type, handlerFn);\n    var maybeRef = ref.current;\n    return function () {\n      return removeInteraction(maybeRef, type, handlerFn);\n    };\n  }, [type, addInteraction, removeInteraction, isPresent, ref]);\n};\n\nvar Interactive = forwardRef(function (props, passedRef) {\n  var ref = useRef();\n  useInteraction(ref, 'onHover', props.onHover);\n  useInteraction(ref, 'onBlur', props.onBlur);\n  useInteraction(ref, 'onSelectStart', props.onSelectStart);\n  useInteraction(ref, 'onSelectEnd', props.onSelectEnd);\n  useInteraction(ref, 'onSelect', props.onSelect);\n  useInteraction(ref, 'onSqueezeStart', props.onSqueezeStart);\n  useInteraction(ref, 'onSqueezeEnd', props.onSqueezeEnd);\n  useInteraction(ref, 'onSqueeze', props.onSqueeze);\n  return /*#__PURE__*/React__default.createElement(\"group\", {\n    ref: mergeRefs([passedRef, ref])\n  }, props.children);\n});\n\nfunction RayGrab(_ref3) {\n  var children = _ref3.children;\n  var grabbingController = useRef();\n  var groupRef = useRef();\n  var previousTransform = useRef(undefined);\n  useXREvent('selectend', function (e) {\n    if (e.controller.controller === grabbingController.current) {\n      grabbingController.current = undefined;\n      previousTransform.current = undefined;\n    }\n  });\n  useFrame(function () {\n    if (!grabbingController.current || !previousTransform.current || !groupRef.current) {\n      return;\n    }\n\n    var controller = grabbingController.current;\n    var group = groupRef.current;\n    group.applyMatrix4(previousTransform.current);\n    group.applyMatrix4(controller.matrixWorld);\n    group.updateWorldMatrix(false, true);\n    previousTransform.current = controller.matrixWorld.clone().invert();\n  });\n  return /*#__PURE__*/React__default.createElement(Interactive, {\n    ref: groupRef,\n    onSelectStart: function onSelectStart(e) {\n      grabbingController.current = e.controller.controller;\n      previousTransform.current = e.controller.controller.matrixWorld.clone().invert();\n    }\n  }, children);\n}\n\nvar XRContext = React.createContext({});\n\nvar useControllers = function useControllers(group) {\n  var _useThree = useThree(),\n      gl = _useThree.gl;\n\n  var _React$useState = React.useState([]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      controllers = _React$useState2[0],\n      setControllers = _React$useState2[1];\n\n  React.useEffect(function () {\n    var ids = [0, 1];\n    ids.forEach(function (id) {\n      XRController.make(id, gl, function (controller) {\n        group.add(controller.controller);\n        group.add(controller.grip);\n        group.add(controller.hand);\n        setControllers(function (it) {\n          return [].concat(_toConsumableArray(it), [controller]);\n        });\n      }, function (controller) {\n        group.remove(controller.controller);\n        group.remove(controller.grip);\n        group.remove(controller.hand);\n        setControllers(function (existing) {\n          return existing.filter(function (it) {\n            return it !== controller;\n          });\n        });\n      });\n    });\n  }, [gl, group]);\n  return controllers;\n};\n\nfunction useHitTest(hitTestCallback) {\n  var _useThree2 = useThree(),\n      gl = _useThree2.gl;\n\n  var hitTestSource = React.useRef();\n  var hitTestSourceRequested = React.useRef(false);\n\n  var _React$useState3 = React.useState(function () {\n    return new Matrix4();\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      hitMatrix = _React$useState4[0];\n\n  useFrame(function () {\n    if (!gl.xr.isPresenting) return;\n    var session = gl.xr.getSession();\n    if (!session) return;\n\n    if (!hitTestSourceRequested.current) {\n      session.requestReferenceSpace('viewer').then(function (referenceSpace) {\n        session.requestHitTestSource({\n          space: referenceSpace\n        }).then(function (source) {\n          hitTestSource.current = source;\n        });\n      });\n      session.addEventListener('end', function () {\n        hitTestSourceRequested.current = false;\n        hitTestSource.current = undefined;\n      }, {\n        once: true\n      });\n      hitTestSourceRequested.current = true;\n    }\n\n    if (hitTestSource.current && gl.xr.isPresenting) {\n      var referenceSpace = gl.xr.getReferenceSpace();\n\n      if (referenceSpace) {\n        // This raf is unnecesary, we should get XRFrame from r3f but it's not implemented yet\n        session.requestAnimationFrame(function (time, frame) {\n          var hitTestResults = frame.getHitTestResults(hitTestSource.current);\n\n          if (hitTestResults.length) {\n            var hit = hitTestResults[0];\n            var pose = hit.getPose(referenceSpace);\n\n            if (pose) {\n              hitMatrix.fromArray(pose.transform.matrix);\n              hitTestCallback(hitMatrix, hit);\n            }\n          }\n        });\n      }\n    }\n  });\n}\n\nfunction XR(_ref4) {\n  var _ref4$foveation = _ref4.foveation,\n      foveation = _ref4$foveation === void 0 ? 0 : _ref4$foveation,\n      children = _ref4.children;\n\n  var _useThree3 = useThree(),\n      gl = _useThree3.gl,\n      camera = _useThree3.camera;\n\n  var _React$useState5 = React.useState(function () {\n    return gl.xr.isPresenting;\n  }),\n      _React$useState6 = _slicedToArray(_React$useState5, 2),\n      isPresenting = _React$useState6[0],\n      setIsPresenting = _React$useState6[1];\n\n  var _React$useState7 = React.useState(false),\n      _React$useState8 = _slicedToArray(_React$useState7, 2),\n      isHandTracking = _React$useState8[0],\n      setHandTracking = _React$useState8[1];\n\n  var _React$useState9 = React.useState(function () {\n    return new Group();\n  }),\n      _React$useState10 = _slicedToArray(_React$useState9, 1),\n      player = _React$useState10[0];\n\n  var controllers = useControllers(player);\n  React.useEffect(function () {\n    var xr = gl.xr;\n\n    var handleSessionChange = function handleSessionChange() {\n      return setIsPresenting(xr.isPresenting);\n    };\n\n    xr.addEventListener('sessionstart', handleSessionChange);\n    xr.addEventListener('sessionend', handleSessionChange);\n    return function () {\n      xr.removeEventListener('sessionstart', handleSessionChange);\n      xr.removeEventListener('sessionend', handleSessionChange);\n    };\n  }, [gl]);\n  React.useEffect(function () {\n    var xr = gl.xr;\n\n    if (xr.setFoveation) {\n      xr.setFoveation(foveation);\n    }\n  }, [gl, foveation]);\n  React.useEffect(function () {\n    var _session$inputSources;\n\n    var session = gl.xr.getSession();\n\n    var handleInputSourcesChange = function handleInputSourcesChange(event) {\n      return setHandTracking(Object.values(event.session.inputSources).some(function (source) {\n        return source.hand;\n      }));\n    };\n\n    session == null ? void 0 : session.addEventListener('inputsourceschange', handleInputSourcesChange);\n    setHandTracking(Object.values((_session$inputSources = session == null ? void 0 : session.inputSources) != null ? _session$inputSources : []).some(function (source) {\n      return source.hand;\n    }));\n    return function () {\n      session == null ? void 0 : session.removeEventListener('inputsourceschange', handleInputSourcesChange);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPresenting]);\n  var value = React.useMemo(function () {\n    return {\n      controllers: controllers,\n      isPresenting: isPresenting,\n      isHandTracking: isHandTracking,\n      player: player\n    };\n  }, [controllers, isPresenting, isHandTracking, player]);\n  return /*#__PURE__*/React.createElement(XRContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: player,\n    dispose: null\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: camera,\n    dispose: null\n  })), children);\n}\n\nfunction XRCanvas(_ref5) {\n  var foveation = _ref5.foveation,\n      children = _ref5.children,\n      rest = _objectWithoutProperties(_ref5, _excluded);\n\n  return /*#__PURE__*/React.createElement(Canvas, _extends({\n    vr: true\n  }, rest), /*#__PURE__*/React.createElement(XR, {\n    foveation: foveation\n  }, /*#__PURE__*/React.createElement(InteractionManager, null, children)));\n}\n\nvar createXRButton = function createXRButton(mode, gl, sessionInit) {\n  var button = mode === 'AR' ? ARButton : VRButton;\n  var selector = mode === 'AR' ? '#ARButton' : '#VRButton';\n\n  if (document.querySelector(selector) === null) {\n    document.body.appendChild(button.createButton(gl, sessionInit));\n  }\n};\n\nfunction VRCanvas(_ref6) {\n  var children = _ref6.children,\n      sessionInit = _ref6.sessionInit,\n      _onCreated = _ref6.onCreated,\n      rest = _objectWithoutProperties(_ref6, _excluded2);\n\n  return /*#__PURE__*/React.createElement(XRCanvas, _extends({\n    onCreated: function onCreated(state) {\n      _onCreated == null ? void 0 : _onCreated(state);\n      createXRButton('VR', state.gl, sessionInit);\n    }\n  }, rest), children);\n}\n\nfunction ARCanvas(_ref7) {\n  var _onCreated2 = _ref7.onCreated,\n      children = _ref7.children,\n      sessionInit = _ref7.sessionInit,\n      rest = _objectWithoutProperties(_ref7, _excluded3);\n\n  return /*#__PURE__*/React.createElement(XRCanvas, _extends({\n    onCreated: function onCreated(state) {\n      _onCreated2 == null ? void 0 : _onCreated2(state);\n      createXRButton('AR', state.gl, sessionInit);\n    }\n  }, rest), children);\n}\n\nvar useXR = function useXR() {\n  var xrValue = React.useContext(XRContext);\n  var interactionsValue = React.useContext(InteractionsContext);\n  var contextValue = React.useMemo(function () {\n    return _objectSpread(_objectSpread({}, xrValue), interactionsValue);\n  }, [xrValue, interactionsValue]);\n  return contextValue;\n};\n\nvar useXRFrame = function useXRFrame(callback) {\n  var _useThree4 = useThree(),\n      gl = _useThree4.gl;\n\n  var requestRef = React.useRef();\n  var previousTimeRef = React.useRef();\n  var loop = React.useCallback(function (time, xrFrame) {\n    if (previousTimeRef.current !== undefined) {\n      callback(time, xrFrame);\n    }\n\n    previousTimeRef.current = time;\n    requestRef.current = gl.xr.getSession().requestAnimationFrame(loop);\n  }, [gl.xr, callback]);\n  React.useEffect(function () {\n    var _gl$xr;\n\n    if (!((_gl$xr = gl.xr) == null ? void 0 : _gl$xr.isPresenting)) {\n      return;\n    }\n\n    requestRef.current = gl.xr.getSession().requestAnimationFrame(loop);\n    return function () {\n      if (requestRef.current) {\n        gl.xr.getSession().cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [gl.xr.isPresenting, loop, gl.xr]);\n};\n\nvar useController = function useController(handedness) {\n  var _useXR3 = useXR(),\n      controllers = _useXR3.controllers;\n\n  var controller = React.useMemo(function () {\n    return controllers.find(function (it) {\n      return it.inputSource.handedness === handedness;\n    });\n  }, [handedness, controllers]);\n  return controller;\n};\n\nvar DEFAULT_PROFILES_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles';\nvar DEFAULT_PROFILE = 'generic-trigger';\n\nvar XRControllerModel = /*#__PURE__*/function (_Object3D) {\n  _inherits(XRControllerModel, _Object3D);\n\n  var _super = _createSuper(XRControllerModel);\n\n  function XRControllerModel() {\n    var _this;\n\n    _classCallCheck(this, XRControllerModel);\n\n    _this = _super.call(this);\n    _this.motionController = null;\n    _this.envMap = null;\n    return _this;\n  }\n\n  _createClass(XRControllerModel, [{\n    key: \"setEnvironmentMap\",\n    value: function setEnvironmentMap(envMap) {\n      var _this2 = this;\n\n      if (this.envMap == envMap) {\n        return this;\n      }\n\n      this.envMap = envMap;\n      this.traverse(function (child) {\n        if (child.isMesh) {\n          child.material.envMap = _this2.envMap;\n          child.material.needsUpdate = true;\n        }\n      });\n      return this;\n    }\n    /**\n     * Polls data from the XRInputSource and updates the model's components to match\n     * the real world data\n     */\n\n  }, {\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(XRControllerModel.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n      if (!this.motionController) return; // Cause the MotionController to poll the Gamepad for data\n\n      this.motionController.updateFromGamepad(); // Update the 3D model to reflect the button, thumbstick, and touchpad state\n\n      Object.values(this.motionController.components).forEach(function (component) {\n        // Update node data based on the visual responses' current states\n        Object.values(component.visualResponses).forEach(function (visualResponse) {\n          var valueNode = visualResponse.valueNode,\n              minNode = visualResponse.minNode,\n              maxNode = visualResponse.maxNode,\n              value = visualResponse.value,\n              valueNodeProperty = visualResponse.valueNodeProperty; // Skip if the visual response node is not found. No error is needed,\n          // because it will have been reported at load time.\n\n          if (!valueNode) return; // Calculate the new properties based on the weight supplied\n\n          if (valueNodeProperty === Constants.VisualResponseProperty.VISIBILITY) {\n            valueNode.visible = value;\n          } else if (valueNodeProperty === Constants.VisualResponseProperty.TRANSFORM) {\n            valueNode.quaternion.slerpQuaternions(minNode.quaternion, maxNode.quaternion, value);\n            valueNode.position.lerpVectors(minNode.position, maxNode.position, value);\n          }\n        });\n      });\n    }\n  }]);\n\n  return XRControllerModel;\n}(Object3D);\n/**\n * Walks the model's tree to find the nodes needed to animate the components and\n * saves them to the motionContoller components for use in the frame loop. When\n * touchpads are found, attaches a touch dot to them.\n */\n\n\nfunction findNodes(motionController, scene) {\n  // Loop through the components and find the nodes needed for each components' visual responses\n  Object.values(motionController.components).forEach(function (component) {\n    var type = component.type,\n        touchPointNodeName = component.touchPointNodeName,\n        visualResponses = component.visualResponses;\n\n    if (type === Constants.ComponentType.TOUCHPAD) {\n      component.touchPointNode = scene.getObjectByName(touchPointNodeName);\n\n      if (component.touchPointNode) {\n        // Attach a touch dot to the touchpad.\n        var sphereGeometry = new SphereGeometry(0.001);\n        var material = new MeshBasicMaterial({\n          color: 0x0000ff\n        });\n        var sphere = new Mesh(sphereGeometry, material);\n        component.touchPointNode.add(sphere);\n      } else {\n        console.warn(\"Could not find touch dot, \".concat(component.touchPointNodeName, \", in touchpad component \").concat(component.id));\n      }\n    } // Loop through all the visual responses to be applied to this component\n\n\n    Object.values(visualResponses).forEach(function (visualResponse) {\n      var valueNodeName = visualResponse.valueNodeName,\n          minNodeName = visualResponse.minNodeName,\n          maxNodeName = visualResponse.maxNodeName,\n          valueNodeProperty = visualResponse.valueNodeProperty; // If animating a transform, find the two nodes to be interpolated between.\n\n      if (valueNodeProperty === Constants.VisualResponseProperty.TRANSFORM) {\n        visualResponse.minNode = scene.getObjectByName(minNodeName);\n        visualResponse.maxNode = scene.getObjectByName(maxNodeName); // If the extents cannot be found, skip this animation\n\n        if (!visualResponse.minNode) {\n          console.warn(\"Could not find \".concat(minNodeName, \" in the model\"));\n          return;\n        }\n\n        if (!visualResponse.maxNode) {\n          console.warn(\"Could not find \".concat(maxNodeName, \" in the model\"));\n          return;\n        }\n      } // If the target node cannot be found, skip this animation\n\n\n      visualResponse.valueNode = scene.getObjectByName(valueNodeName);\n\n      if (!visualResponse.valueNode) {\n        console.warn(\"Could not find \".concat(valueNodeName, \" in the model\"));\n      }\n    });\n  });\n}\n\nfunction addAssetSceneToControllerModel(controllerModel, scene) {\n  // Find the nodes needed for animation and cache them on the motionController.\n  findNodes(controllerModel.motionController, scene); // Apply any environment map that the mesh already has set.\n\n  if (controllerModel.envMap) {\n    scene.traverse(function (child) {\n      if (child.isMesh) {\n        child.material.envMap = controllerModel.envMap;\n        child.material.needsUpdate = true;\n      }\n    });\n  } // Add the glTF scene to the controllerModel.\n\n\n  controllerModel.add(scene);\n}\n\nvar XRControllerModelFactory = /*#__PURE__*/function () {\n  function XRControllerModelFactory() {\n    var gltfLoader = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    _classCallCheck(this, XRControllerModelFactory);\n\n    this.gltfLoader = gltfLoader;\n    this.path = DEFAULT_PROFILES_PATH;\n    this._assetCache = {}; // If a GLTFLoader wasn't supplied to the constructor create a new one.\n\n    if (!this.gltfLoader) {\n      this.gltfLoader = new GLTFLoader();\n    }\n  }\n\n  _createClass(XRControllerModelFactory, [{\n    key: \"createControllerModel\",\n    value: function createControllerModel(controller) {\n      var _this3 = this;\n\n      var controllerModel = new XRControllerModel();\n      var scene = null;\n      controller.addEventListener('connected', function (event) {\n        var xrInputSource = event.data;\n        if (xrInputSource.targetRayMode !== 'tracked-pointer' || !xrInputSource.gamepad) return;\n        fetchProfile(xrInputSource, _this3.path, DEFAULT_PROFILE).then(function (_ref8) {\n          var profile = _ref8.profile,\n              assetPath = _ref8.assetPath;\n          controllerModel.motionController = new MotionController(xrInputSource, profile, assetPath);\n          var cachedAsset = _this3._assetCache[controllerModel.motionController.assetUrl];\n\n          if (cachedAsset) {\n            scene = cachedAsset.scene.clone();\n            addAssetSceneToControllerModel(controllerModel, scene);\n          } else {\n            if (!_this3.gltfLoader) {\n              throw new Error('GLTFLoader not set.');\n            }\n\n            _this3.gltfLoader.setPath('');\n\n            _this3.gltfLoader.load(controllerModel.motionController.assetUrl, function (asset) {\n              _this3._assetCache[controllerModel.motionController.assetUrl] = asset;\n              scene = asset.scene.clone();\n              addAssetSceneToControllerModel(controllerModel, scene);\n            }, null, function () {\n              throw new Error(\"Asset \".concat(controllerModel.motionController.assetUrl, \" missing or malformed.\"));\n            });\n          }\n        }).catch(function (err) {\n          console.warn(err);\n        });\n      });\n      controller.addEventListener('disconnected', function () {\n        controllerModel.motionController = null;\n        controllerModel.remove(scene);\n        scene = null;\n      });\n      return controllerModel;\n    }\n  }]);\n\n  return XRControllerModelFactory;\n}();\n\nvar modelFactory = new XRControllerModelFactory();\nvar modelCache = new WeakMap();\n\nfunction DefaultXRControllers(_ref9) {\n  var _ref9$rayMaterial = _ref9.rayMaterial,\n      rayMaterial = _ref9$rayMaterial === void 0 ? {} : _ref9$rayMaterial;\n\n  var _useThree5 = useThree(),\n      scene = _useThree5.scene;\n\n  var _useXR4 = useXR(),\n      controllers = _useXR4.controllers,\n      hoverState = _useXR4.hoverState;\n\n  var _React__default$useSt7 = React__default.useState(new Map()),\n      _React__default$useSt8 = _slicedToArray(_React__default$useSt7, 1),\n      rays = _React__default$useSt8[0]; // Show ray line when hovering objects\n\n\n  useFrame(function () {\n    controllers.forEach(function (it) {\n      var ray = rays.get(it.controller.id);\n      if (!ray) return;\n      var intersection = hoverState[it.inputSource.handedness].values().next().value;\n\n      if (!intersection || it.inputSource.handedness === 'none') {\n        ray.visible = false;\n        return;\n      }\n\n      var rayLength = intersection.distance; // Tiny offset to clip ray on AR devices\n      // that don't have handedness set to 'none'\n\n      var offset = -0.01;\n      ray.visible = true;\n      ray.scale.y = rayLength + offset;\n      ray.position.z = -rayLength / 2 - offset;\n    });\n  });\n  useEffect(function () {\n    var cleanups = [];\n    controllers.forEach(function (_ref10) {\n      var controller = _ref10.controller,\n          grip = _ref10.grip,\n          inputSource = _ref10.inputSource;\n      // Attach 3D model of the controller\n      var model;\n\n      if (modelCache.has(controller)) {\n        model = modelCache.get(controller);\n      } else {\n        model = modelFactory.createControllerModel(controller);\n        controller.dispatchEvent({\n          type: 'connected',\n          data: inputSource,\n          fake: true\n        });\n        modelCache.set(controller, model);\n      }\n\n      grip.add(model); // Add Ray line (used for hovering)\n\n      var ray = new Mesh();\n      ray.rotation.set(Math.PI / 2, 0, 0);\n      ray.material = new MeshBasicMaterial(_objectSpread({\n        color: new Color(0xffffff),\n        opacity: 0.8,\n        transparent: true\n      }, rayMaterial));\n      ray.geometry = new BoxBufferGeometry(0.002, 1, 0.002);\n      rays.set(controller.id, ray);\n      controller.add(ray);\n      cleanups.push(function () {\n        grip.remove(model);\n        controller.remove(ray);\n        rays.delete(controller.id);\n      });\n    });\n    return function () {\n      cleanups.forEach(function (fn) {\n        return fn();\n      });\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controllers, scene, rays, JSON.stringify(rayMaterial)]);\n  return null;\n}\n\nvar DEFAULT_HAND_PROFILE_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/';\n\nvar XRHandMeshModel = /*#__PURE__*/function () {\n  function XRHandMeshModel(handModel, controller, path, handedness, customModel) {\n    var _this4 = this;\n\n    _classCallCheck(this, XRHandMeshModel);\n\n    this.controller = controller;\n    this.handModel = handModel;\n    this.bones = [];\n    var loader = new GLTFLoader();\n    if (!customModel) loader.setPath(path || DEFAULT_HAND_PROFILE_PATH);\n    loader.load(customModel != null ? customModel : \"\".concat(handedness, \".glb\"), function (gltf) {\n      var object = gltf.scene.children[0];\n\n      _this4.handModel.add(object);\n\n      var mesh = object.getObjectByProperty('type', 'SkinnedMesh');\n      mesh.frustumCulled = false;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      mesh.material.side = 0; // Workaround: force FrontSide\n\n      var joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n      joints.forEach(function (jointName) {\n        var bone = object.getObjectByName(jointName);\n\n        if (bone !== undefined) {\n          bone.jointName = jointName;\n        } else {\n          console.warn(\"Couldn't find \".concat(jointName, \" in \").concat(handedness, \" hand mesh\"));\n        }\n\n        _this4.bones.push(bone);\n      });\n    });\n  }\n\n  _createClass(XRHandMeshModel, [{\n    key: \"updateMesh\",\n    value: function updateMesh() {\n      // XR Joints\n      var XRJoints = this.controller.joints;\n\n      for (var i = 0; i < this.bones.length; i++) {\n        var bone = this.bones[i];\n\n        if (bone) {\n          var XRJoint = XRJoints[bone.jointName];\n\n          if (XRJoint.visible) {\n            var position = XRJoint.position;\n\n            if (bone) {\n              bone.position.copy(position);\n              bone.quaternion.copy(XRJoint.quaternion); // bone.scale.setScalar( XRJoint.jointRadius || defaultRadius );\n            }\n          }\n        }\n      }\n    }\n  }]);\n\n  return XRHandMeshModel;\n}();\n\nvar TOUCH_RADIUS = 0.01;\nvar POINTING_JOINT = 'index-finger-tip';\n\nvar HandModel = /*#__PURE__*/function (_Object3D2) {\n  _inherits(HandModel, _Object3D2);\n\n  var _super2 = _createSuper(HandModel);\n\n  function HandModel(controller, customModels) {\n    var _this5;\n\n    _classCallCheck(this, HandModel);\n\n    _this5 = _super2.call(this);\n    _this5.controller = controller;\n    _this5.motionController = null;\n    _this5.envMap = null;\n    _this5.mesh = null;\n    controller.addEventListener('connected', function (event) {\n      var xrInputSource = event.data;\n\n      if (xrInputSource.hand && !_this5.motionController) {\n        _this5.xrInputSource = xrInputSource;\n        _this5.motionController = new XRHandMeshModel(_assertThisInitialized(_this5), controller, _this5.path, xrInputSource.handedness, xrInputSource.handedness === \"left\" ? customModels[0] : customModels[1]);\n      }\n    });\n    controller.addEventListener('disconnected', function () {\n      _this5.clear();\n\n      _this5.motionController = null;\n    });\n    return _this5;\n  }\n\n  _createClass(HandModel, [{\n    key: \"updateMatrixWorld\",\n    value: function updateMatrixWorld(force) {\n      _get(_getPrototypeOf(HandModel.prototype), \"updateMatrixWorld\", this).call(this, force);\n\n      if (this.motionController) {\n        this.motionController.updateMesh();\n      }\n    }\n  }, {\n    key: \"getPointerPosition\",\n    value: function getPointerPosition() {\n      var indexFingerTip = this.controller.joints[POINTING_JOINT];\n\n      if (indexFingerTip) {\n        return indexFingerTip.position;\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"intersectBoxObject\",\n    value: function intersectBoxObject(boxObject) {\n      var pointerPosition = this.getPointerPosition();\n\n      if (pointerPosition) {\n        var indexSphere = new Sphere(pointerPosition, TOUCH_RADIUS);\n        var box = new Box3().setFromObject(boxObject);\n        return indexSphere.intersectsBox(box);\n      } else {\n        return false;\n      }\n    }\n  }, {\n    key: \"checkButton\",\n    value: function checkButton(button) {\n      if (this.intersectBoxObject(button)) {\n        button.onPress();\n      } else {\n        button.onClear();\n      }\n\n      if (button.isPressed()) {\n        button.whilePressed();\n      }\n    }\n  }]);\n\n  return HandModel;\n}(Object3D);\n\nfunction Hands(props) {\n  var _useThree6 = useThree(),\n      scene = _useThree6.scene,\n      gl = _useThree6.gl;\n\n  var _useXR5 = useXR(),\n      controllers = _useXR5.controllers;\n\n  useEffect(function () {\n    controllers.forEach(function (_ref11) {\n      var hand = _ref11.hand,\n          inputSource = _ref11.inputSource;\n      var handModel = hand.children.find(function (child) {\n        return child instanceof HandModel;\n      });\n\n      if (handModel === undefined) {\n        hand.add(new HandModel(hand, [props.modelLeft, props.modelRight])); // throwing fake event for the Oculus Hand Model so it starts loading\n\n        hand.dispatchEvent({\n          type: 'connected',\n          data: inputSource,\n          fake: true\n        });\n      }\n    });\n  }, [scene, gl, controllers]);\n  return null;\n}\n\nexport { ARCanvas, DefaultXRControllers, Hands, InteractionManager, InteractionsContext, Interactive, RayGrab, VRCanvas, XR, XRController, useController, useHitTest, useInteraction, useXR, useXREvent, useXRFrame };","map":{"version":3,"sources":["/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/@react-three/xr/dist/index.js"],"names":["_extends","React","React__default","useMemo","useContext","useRef","useEffect","forwardRef","useFrame","useThree","Canvas","Raycaster","Matrix4","Group","Object3D","SphereGeometry","MeshBasicMaterial","Mesh","Color","BoxBufferGeometry","Sphere","Box3","mergeRefs","GLTFLoader","fetchProfile","MotionController","Constants","ARButton","renderer","sessionInit","button","document","createElement","showStartAR","domOverlay","undefined","overlay","style","display","body","appendChild","svg","createElementNS","setAttribute","position","right","top","addEventListener","currentSession","end","path","optionalFeatures","push","root","onSessionStarted","session","onSessionEnded","xr","setReferenceSpaceType","setSession","textContent","removeEventListener","cursor","left","width","onmouseenter","opacity","onmouseleave","onclick","navigator","requestSession","then","disableButton","showARNotSupported","stylizeElement","element","bottom","padding","border","borderRadius","background","color","font","textAlign","outline","zIndex","id","isSessionSupported","supported","catch","message","window","isSecureContext","href","location","replace","innerHTML","textDecoration","VRButton","showEnterVR","flat","filter","Boolean","showWebXRNotFound","XRController","make","gl","onConnected","onDisconnected","controller","getController","grip","getControllerGrip","hand","getHand","xrController","inputSource","userData","name","event","fake","data","_","ObjectsState","Map","add","state","object","key","value","has","set","entry","get","delete","it","length","Object","keys","useXREvent","handler","handedness","handlerRef","current","useXR","allControllers","controllers","cleanups","forEach","listener","e","originalEvent","fn","InteractionsContext","createContext","InteractionManager","children","useState","none","hoverState","interactions","addInteraction","useCallback","eventType","removeInteraction","raycaster","intersect","objects","Array","from","tempMatrix","identity","extractRotation","matrixWorld","ray","origin","setFromMatrixPosition","direction","applyMatrix4","intersectObjects","size","hovering","hits","Set","intersections","intersection","eventObject","_ObjectsState$get","parent","_ObjectsState$get2","triggerEvent","interaction","hovered","_ObjectsState$get3","contextValue","Provider","useInteraction","ref","type","isPresent","handlerFn","maybeRef","Interactive","props","passedRef","onHover","onBlur","onSelectStart","onSelectEnd","onSelect","onSqueezeStart","onSqueezeEnd","onSqueeze","RayGrab","grabbingController","groupRef","previousTransform","group","updateWorldMatrix","clone","invert","XRContext","useControllers","setControllers","ids","remove","existing","useHitTest","hitTestCallback","hitTestSource","hitTestSourceRequested","hitMatrix","isPresenting","getSession","requestReferenceSpace","referenceSpace","requestHitTestSource","space","source","once","getReferenceSpace","requestAnimationFrame","time","frame","hitTestResults","getHitTestResults","hit","pose","getPose","fromArray","transform","matrix","XR","foveation","camera","setIsPresenting","isHandTracking","setHandTracking","player","handleSessionChange","setFoveation","_session$inputSources","handleInputSourcesChange","values","inputSources","some","dispose","XRCanvas","rest","vr","createXRButton","mode","selector","querySelector","createButton","VRCanvas","onCreated","ARCanvas","xrValue","interactionsValue","useXRFrame","callback","requestRef","previousTimeRef","loop","xrFrame","_gl$xr","cancelAnimationFrame","useController","find","DEFAULT_PROFILES_PATH","DEFAULT_PROFILE","XRControllerModel","motionController","envMap","traverse","child","isMesh","material","needsUpdate","force","updateFromGamepad","components","component","visualResponses","visualResponse","valueNode","minNode","maxNode","valueNodeProperty","VisualResponseProperty","VISIBILITY","visible","TRANSFORM","quaternion","slerpQuaternions","lerpVectors","findNodes","scene","touchPointNodeName","ComponentType","TOUCHPAD","touchPointNode","getObjectByName","sphereGeometry","sphere","console","warn","valueNodeName","minNodeName","maxNodeName","addAssetSceneToControllerModel","controllerModel","XRControllerModelFactory","gltfLoader","_assetCache","xrInputSource","targetRayMode","gamepad","profile","assetPath","cachedAsset","assetUrl","Error","setPath","load","asset","err","modelFactory","modelCache","WeakMap","DefaultXRControllers","rayMaterial","rays","next","rayLength","distance","offset","scale","y","z","model","createControllerModel","dispatchEvent","rotation","Math","PI","transparent","geometry","JSON","stringify","DEFAULT_HAND_PROFILE_PATH","XRHandMeshModel","handModel","customModel","bones","loader","gltf","mesh","getObjectByProperty","frustumCulled","castShadow","receiveShadow","side","joints","jointName","bone","XRJoints","i","XRJoint","copy","TOUCH_RADIUS","POINTING_JOINT","HandModel","customModels","clear","updateMesh","indexFingerTip","boxObject","pointerPosition","getPointerPosition","indexSphere","box","setFromObject","intersectsBox","intersectBoxObject","onPress","onClear","isPressed","whilePressed","Hands","modelLeft","modelRight"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport React__default, { useMemo, useContext, useRef, useEffect, forwardRef } from 'react';\nimport { useFrame, useThree, Canvas } from '@react-three/fiber';\nimport { Raycaster, Matrix4, Group, Object3D, SphereGeometry, MeshBasicMaterial, Mesh, Color, BoxBufferGeometry, Sphere, Box3 } from 'three';\nimport mergeRefs from 'react-merge-refs';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader';\nimport { fetchProfile, MotionController, Constants } from '@webxr-input-profiles/motion-controllers';\n\nclass ARButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement('button');\n\n    function showStartAR()\n    /*device*/\n    {\n      if (sessionInit.domOverlay === undefined) {\n        const overlay = document.createElement('div');\n        overlay.style.display = 'none';\n        document.body.appendChild(overlay);\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', 38);\n        svg.setAttribute('height', 38);\n        svg.style.position = 'absolute';\n        svg.style.right = '20px';\n        svg.style.top = '20px';\n        svg.addEventListener('click', function () {\n          currentSession.end();\n        });\n        overlay.appendChild(svg);\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M 12,12 L 28,28 M 28,12 12,28');\n        path.setAttribute('stroke', '#fff');\n        path.setAttribute('stroke-width', 2);\n        svg.appendChild(path);\n\n        if (sessionInit.optionalFeatures === undefined) {\n          sessionInit.optionalFeatures = [];\n        }\n\n        sessionInit.optionalFeatures.push('dom-overlay');\n        sessionInit.domOverlay = {\n          root: overlay\n        };\n      } //\n\n\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        renderer.xr.setReferenceSpaceType('local');\n        await renderer.xr.setSession(session);\n        button.textContent = 'STOP AR';\n        sessionInit.domOverlay.root.style.display = '';\n        currentSession = session;\n      }\n\n      function onSessionEnded()\n      /*event*/\n      {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'START AR';\n        sessionInit.domOverlay.root.style.display = 'none';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'START AR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        if (currentSession === null) {\n          navigator.xr.requestSession('immersive-ar', sessionInit).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showARNotSupported() {\n      disableButton();\n      button.textContent = 'AR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'ARButton';\n      button.style.display = 'none';\n      stylizeElement(button);\n      navigator.xr.isSessionSupported('immersive-ar').then(function (supported) {\n        supported ? showStartAR() : showARNotSupported();\n      }).catch(showARNotSupported);\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nclass VRButton {\n  static createButton(renderer, sessionInit = {}) {\n    const button = document.createElement('button');\n\n    function showEnterVR()\n    /*device*/\n    {\n      let currentSession = null;\n\n      async function onSessionStarted(session) {\n        session.addEventListener('end', onSessionEnded);\n        await renderer.xr.setSession(session);\n        button.textContent = 'EXIT VR';\n        currentSession = session;\n      }\n\n      function onSessionEnded()\n      /*event*/\n      {\n        currentSession.removeEventListener('end', onSessionEnded);\n        button.textContent = 'ENTER VR';\n        currentSession = null;\n      } //\n\n\n      button.style.display = '';\n      button.style.cursor = 'pointer';\n      button.style.left = 'calc(50% - 50px)';\n      button.style.width = '100px';\n      button.textContent = 'ENTER VR';\n\n      button.onmouseenter = function () {\n        button.style.opacity = '1.0';\n      };\n\n      button.onmouseleave = function () {\n        button.style.opacity = '0.5';\n      };\n\n      button.onclick = function () {\n        if (currentSession === null) {\n          // WebXR's requestReferenceSpace only works if the corresponding feature\n          // was requested at session creation time. For simplicity, just ask for\n          // the interesting ones as optional features, but be aware that the\n          // requestReferenceSpace call will fail if it turns out to be unavailable.\n          // ('local' is always available for immersive sessions and doesn't need to\n          // be requested separately.)\n          const optionalFeatures = [sessionInit.optionalFeatures, 'local-floor', 'bounded-floor', 'hand-tracking'].flat().filter(Boolean);\n          sessionInit.optionalFeatures = navigator.xr.requestSession('immersive-vr', { ...sessionInit,\n            optionalFeatures\n          }).then(onSessionStarted);\n        } else {\n          currentSession.end();\n        }\n      };\n    }\n\n    function disableButton() {\n      button.style.display = '';\n      button.style.cursor = 'auto';\n      button.style.left = 'calc(50% - 75px)';\n      button.style.width = '150px';\n      button.onmouseenter = null;\n      button.onmouseleave = null;\n      button.onclick = null;\n    }\n\n    function showWebXRNotFound() {\n      disableButton();\n      button.textContent = 'VR NOT SUPPORTED';\n    }\n\n    function stylizeElement(element) {\n      element.style.position = 'absolute';\n      element.style.bottom = '20px';\n      element.style.padding = '12px 6px';\n      element.style.border = '1px solid #fff';\n      element.style.borderRadius = '4px';\n      element.style.background = 'rgba(0,0,0,0.1)';\n      element.style.color = '#fff';\n      element.style.font = 'normal 13px sans-serif';\n      element.style.textAlign = 'center';\n      element.style.opacity = '0.5';\n      element.style.outline = 'none';\n      element.style.zIndex = '999';\n    }\n\n    if ('xr' in navigator) {\n      button.id = 'VRButton';\n      button.style.display = 'none';\n      stylizeElement(button);\n      navigator.xr.isSessionSupported('immersive-vr').then(function (supported) {\n        supported ? showEnterVR() : showWebXRNotFound();\n      });\n      return button;\n    } else {\n      const message = document.createElement('a');\n\n      if (window.isSecureContext === false) {\n        message.href = document.location.href.replace(/^http:/, 'https:');\n        message.innerHTML = 'WEBXR NEEDS HTTPS'; // TODO Improve message\n      } else {\n        message.href = 'https://immersiveweb.dev/';\n        message.innerHTML = 'WEBXR NOT AVAILABLE';\n      }\n\n      message.style.left = 'calc(50% - 90px)';\n      message.style.width = '180px';\n      message.style.textDecoration = 'none';\n      stylizeElement(message);\n      return message;\n    }\n  }\n\n}\n\nconst XRController = {\n  make: (id, gl, onConnected, onDisconnected) => {\n    const controller = gl.xr.getController(id);\n    const grip = gl.xr.getControllerGrip(id);\n    const hand = gl.xr.getHand(id);\n    const xrController = {\n      inputSource: undefined,\n      grip,\n      controller,\n      hand\n    };\n    grip.userData.name = 'grip';\n    controller.userData.name = 'controller';\n    hand.userData.name = 'hand';\n    controller.addEventListener('connected', event => {\n      if (event.fake) {\n        return;\n      }\n\n      xrController.inputSource = event.data;\n      onConnected(xrController);\n    });\n    controller.addEventListener('disconnected', _ => {\n      onDisconnected(xrController);\n    });\n  }\n};\n\n/**\n * Store data associated with some objects in the scene\n *\n * For example storing event handlers:\n *\n * objectA:\n *   onClick: [handler, handler]\n * objectB:\n *   onHover: [handler]\n *   onBlur:  [handler]\n *\n */\nconst ObjectsState = {\n  make: function () {\n    return new Map();\n  },\n  add: function (state, object, key, value) {\n    if (!state.has(object)) {\n      state.set(object, {\n        key: [value]\n      });\n    }\n\n    const entry = state.get(object);\n\n    if (!entry[key]) {\n      entry[key] = [];\n    }\n\n    entry[key].push(value);\n  },\n  delete: function (state, object, key, value) {\n    const entry = state.get(object);\n    if (!entry || !entry[key]) return;\n    entry[key] = entry[key].filter(it => it !== value);\n\n    if (entry[key].length === 0) {\n      delete entry[key];\n    } // Remove entry if nothing left\n\n\n    if (Object.keys(entry).length === 0) {\n      state.delete(object);\n    }\n  },\n  has: function (state, object, key) {\n    const entry = state.get(object);\n    return !!(entry && entry[key]);\n  },\n  get: function (state, object, key) {\n    const entry = state.get(object);\n    return entry && entry[key];\n  }\n};\n\nconst useXREvent = (event, handler, {\n  handedness\n} = {}) => {\n  const handlerRef = React__default.useRef(handler);\n  React__default.useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  const {\n    controllers: allControllers\n  } = useXR();\n  React__default.useEffect(() => {\n    const controllers = handedness ? allControllers.filter(it => it.inputSource.handedness === handedness) : allControllers;\n    const cleanups = [];\n    controllers.forEach(it => {\n      const listener = e => handlerRef.current({\n        originalEvent: e,\n        controller: it\n      });\n\n      it.controller.addEventListener(event, listener);\n      cleanups.push(() => it.controller.removeEventListener(event, listener));\n    });\n    return () => cleanups.forEach(fn => fn());\n  }, [event, allControllers, handedness]);\n};\n\nconst InteractionsContext = React__default.createContext({});\nfunction InteractionManager({\n  children\n}) {\n  const {\n    controllers\n  } = useXR();\n  const [hoverState] = React__default.useState(() => ({\n    left: new Map(),\n    right: new Map(),\n    none: new Map()\n  }));\n  const [interactions] = React__default.useState(() => ObjectsState.make());\n  const addInteraction = React__default.useCallback((object, eventType, handler) => {\n    ObjectsState.add(interactions, object, eventType, handler);\n  }, [interactions]);\n  const removeInteraction = React__default.useCallback((object, eventType, handler) => {\n    ObjectsState.delete(interactions, object, eventType, handler);\n  }, [interactions]);\n  const [raycaster] = React__default.useState(() => new Raycaster());\n  const intersect = React__default.useCallback(controller => {\n    const objects = Array.from(interactions.keys());\n    const tempMatrix = new Matrix4();\n    tempMatrix.identity().extractRotation(controller.matrixWorld);\n    raycaster.ray.origin.setFromMatrixPosition(controller.matrixWorld);\n    raycaster.ray.direction.set(0, 0, -1).applyMatrix4(tempMatrix);\n    return raycaster.intersectObjects(objects, true);\n  }, [interactions, raycaster]); // Trigger hover and blur events\n\n  useFrame(() => {\n    if (interactions.size === 0) {\n      return;\n    }\n\n    controllers.forEach(it => {\n      const {\n        controller\n      } = it;\n      const handedness = it.inputSource.handedness;\n      const hovering = hoverState[handedness];\n      const hits = new Set();\n      const intersections = intersect(controller);\n      intersections.forEach(intersection => {\n        let eventObject = intersection.object;\n\n        while (eventObject) {\n          if (ObjectsState.has(interactions, eventObject, 'onHover') && !hovering.has(eventObject)) {\n            var _ObjectsState$get;\n\n            (_ObjectsState$get = ObjectsState.get(interactions, eventObject, 'onHover')) == null ? void 0 : _ObjectsState$get.forEach(handler => handler({\n              controller: it,\n              intersection\n            }));\n          }\n\n          hovering.set(eventObject, intersection);\n          hits.add(eventObject.id);\n          eventObject = eventObject.parent;\n        }\n      }); // Trigger blur on all the object that were hovered in the previous frame\n      // but missed in this one\n\n      for (const eventObject of hovering.keys()) {\n        if (!hits.has(eventObject.id)) {\n          var _ObjectsState$get2;\n\n          (_ObjectsState$get2 = ObjectsState.get(interactions, eventObject, 'onBlur')) == null ? void 0 : _ObjectsState$get2.forEach(handler => handler({\n            controller: it\n          }));\n          hovering.delete(eventObject);\n        }\n      }\n    });\n  });\n\n  const triggerEvent = interaction => e => {\n    const hovering = hoverState[e.controller.inputSource.handedness];\n\n    for (const hovered of hovering.keys()) {\n      var _ObjectsState$get3;\n\n      (_ObjectsState$get3 = ObjectsState.get(interactions, hovered, interaction)) == null ? void 0 : _ObjectsState$get3.forEach(handler => handler({\n        controller: e.controller\n      }));\n    }\n  };\n\n  useXREvent('select', triggerEvent('onSelect'));\n  useXREvent('selectstart', triggerEvent('onSelectStart'));\n  useXREvent('selectend', triggerEvent('onSelectEnd'));\n  useXREvent('squeeze', triggerEvent('onSqueeze'));\n  useXREvent('squeezeend', triggerEvent('onSqueezeEnd'));\n  useXREvent('squeezestart', triggerEvent('onSqueezeStart'));\n  const contextValue = useMemo(() => ({\n    addInteraction,\n    removeInteraction,\n    hoverState\n  }), [addInteraction, removeInteraction, hoverState]);\n  return /*#__PURE__*/React__default.createElement(InteractionsContext.Provider, {\n    value: contextValue\n  }, children);\n}\nconst useInteraction = (ref, type, handler) => {\n  const {\n    addInteraction,\n    removeInteraction\n  } = useContext(InteractionsContext);\n  const isPresent = handler !== undefined;\n  const handlerRef = useRef(handler);\n  useEffect(() => {\n    handlerRef.current = handler;\n  }, [handler]);\n  useEffect(() => {\n    if (!isPresent) return;\n\n    const handlerFn = e => {\n      // @ts-ignore\n      handlerRef.current(e);\n    };\n\n    addInteraction(ref.current, type, handlerFn);\n    const maybeRef = ref.current;\n    return () => removeInteraction(maybeRef, type, handlerFn);\n  }, [type, addInteraction, removeInteraction, isPresent, ref]);\n};\nconst Interactive = forwardRef((props, passedRef) => {\n  const ref = useRef();\n  useInteraction(ref, 'onHover', props.onHover);\n  useInteraction(ref, 'onBlur', props.onBlur);\n  useInteraction(ref, 'onSelectStart', props.onSelectStart);\n  useInteraction(ref, 'onSelectEnd', props.onSelectEnd);\n  useInteraction(ref, 'onSelect', props.onSelect);\n  useInteraction(ref, 'onSqueezeStart', props.onSqueezeStart);\n  useInteraction(ref, 'onSqueezeEnd', props.onSqueezeEnd);\n  useInteraction(ref, 'onSqueeze', props.onSqueeze);\n  return /*#__PURE__*/React__default.createElement(\"group\", {\n    ref: mergeRefs([passedRef, ref])\n  }, props.children);\n});\nfunction RayGrab({\n  children\n}) {\n  const grabbingController = useRef();\n  const groupRef = useRef();\n  const previousTransform = useRef(undefined);\n  useXREvent('selectend', e => {\n    if (e.controller.controller === grabbingController.current) {\n      grabbingController.current = undefined;\n      previousTransform.current = undefined;\n    }\n  });\n  useFrame(() => {\n    if (!grabbingController.current || !previousTransform.current || !groupRef.current) {\n      return;\n    }\n\n    const controller = grabbingController.current;\n    const group = groupRef.current;\n    group.applyMatrix4(previousTransform.current);\n    group.applyMatrix4(controller.matrixWorld);\n    group.updateWorldMatrix(false, true);\n    previousTransform.current = controller.matrixWorld.clone().invert();\n  });\n  return /*#__PURE__*/React__default.createElement(Interactive, {\n    ref: groupRef,\n    onSelectStart: e => {\n      grabbingController.current = e.controller.controller;\n      previousTransform.current = e.controller.controller.matrixWorld.clone().invert();\n    }\n  }, children);\n}\n\nconst XRContext = React.createContext({});\n\nconst useControllers = group => {\n  const {\n    gl\n  } = useThree();\n  const [controllers, setControllers] = React.useState([]);\n  React.useEffect(() => {\n    const ids = [0, 1];\n    ids.forEach(id => {\n      XRController.make(id, gl, controller => {\n        group.add(controller.controller);\n        group.add(controller.grip);\n        group.add(controller.hand);\n        setControllers(it => [...it, controller]);\n      }, controller => {\n        group.remove(controller.controller);\n        group.remove(controller.grip);\n        group.remove(controller.hand);\n        setControllers(existing => existing.filter(it => it !== controller));\n      });\n    });\n  }, [gl, group]);\n  return controllers;\n};\n\nfunction useHitTest(hitTestCallback) {\n  const {\n    gl\n  } = useThree();\n  const hitTestSource = React.useRef();\n  const hitTestSourceRequested = React.useRef(false);\n  const [hitMatrix] = React.useState(() => new Matrix4());\n  useFrame(() => {\n    if (!gl.xr.isPresenting) return;\n    const session = gl.xr.getSession();\n    if (!session) return;\n\n    if (!hitTestSourceRequested.current) {\n      session.requestReferenceSpace('viewer').then(referenceSpace => {\n        session.requestHitTestSource({\n          space: referenceSpace\n        }).then(source => {\n          hitTestSource.current = source;\n        });\n      });\n      session.addEventListener('end', () => {\n        hitTestSourceRequested.current = false;\n        hitTestSource.current = undefined;\n      }, {\n        once: true\n      });\n      hitTestSourceRequested.current = true;\n    }\n\n    if (hitTestSource.current && gl.xr.isPresenting) {\n      const referenceSpace = gl.xr.getReferenceSpace();\n\n      if (referenceSpace) {\n        // This raf is unnecesary, we should get XRFrame from r3f but it's not implemented yet\n        session.requestAnimationFrame((time, frame) => {\n          const hitTestResults = frame.getHitTestResults(hitTestSource.current);\n\n          if (hitTestResults.length) {\n            const hit = hitTestResults[0];\n            const pose = hit.getPose(referenceSpace);\n\n            if (pose) {\n              hitMatrix.fromArray(pose.transform.matrix);\n              hitTestCallback(hitMatrix, hit);\n            }\n          }\n        });\n      }\n    }\n  });\n}\nfunction XR({\n  foveation = 0,\n  children\n}) {\n  const {\n    gl,\n    camera\n  } = useThree();\n  const [isPresenting, setIsPresenting] = React.useState(() => gl.xr.isPresenting);\n  const [isHandTracking, setHandTracking] = React.useState(false);\n  const [player] = React.useState(() => new Group());\n  const controllers = useControllers(player);\n  React.useEffect(() => {\n    const xr = gl.xr;\n\n    const handleSessionChange = () => setIsPresenting(xr.isPresenting);\n\n    xr.addEventListener('sessionstart', handleSessionChange);\n    xr.addEventListener('sessionend', handleSessionChange);\n    return () => {\n      xr.removeEventListener('sessionstart', handleSessionChange);\n      xr.removeEventListener('sessionend', handleSessionChange);\n    };\n  }, [gl]);\n  React.useEffect(() => {\n    const xr = gl.xr;\n\n    if (xr.setFoveation) {\n      xr.setFoveation(foveation);\n    }\n  }, [gl, foveation]);\n  React.useEffect(() => {\n    var _session$inputSources;\n\n    const session = gl.xr.getSession();\n\n    const handleInputSourcesChange = event => setHandTracking(Object.values(event.session.inputSources).some(source => source.hand));\n\n    session == null ? void 0 : session.addEventListener('inputsourceschange', handleInputSourcesChange);\n    setHandTracking(Object.values((_session$inputSources = session == null ? void 0 : session.inputSources) != null ? _session$inputSources : []).some(source => source.hand));\n    return () => {\n      session == null ? void 0 : session.removeEventListener('inputsourceschange', handleInputSourcesChange);\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [isPresenting]);\n  const value = React.useMemo(() => ({\n    controllers,\n    isPresenting,\n    isHandTracking,\n    player\n  }), [controllers, isPresenting, isHandTracking, player]);\n  return /*#__PURE__*/React.createElement(XRContext.Provider, {\n    value: value\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: player,\n    dispose: null\n  }, /*#__PURE__*/React.createElement(\"primitive\", {\n    object: camera,\n    dispose: null\n  })), children);\n}\n\nfunction XRCanvas({\n  foveation,\n  children,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(Canvas, _extends({\n    vr: true\n  }, rest), /*#__PURE__*/React.createElement(XR, {\n    foveation: foveation\n  }, /*#__PURE__*/React.createElement(InteractionManager, null, children)));\n}\n\nconst createXRButton = (mode, gl, sessionInit) => {\n  const button = mode === 'AR' ? ARButton : VRButton;\n  const selector = mode === 'AR' ? '#ARButton' : '#VRButton';\n\n  if (document.querySelector(selector) === null) {\n    document.body.appendChild(button.createButton(gl, sessionInit));\n  }\n};\n\nfunction VRCanvas({\n  children,\n  sessionInit,\n  onCreated,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(XRCanvas, _extends({\n    onCreated: state => {\n      onCreated == null ? void 0 : onCreated(state);\n      createXRButton('VR', state.gl, sessionInit);\n    }\n  }, rest), children);\n}\nfunction ARCanvas({\n  onCreated,\n  children,\n  sessionInit,\n  ...rest\n}) {\n  return /*#__PURE__*/React.createElement(XRCanvas, _extends({\n    onCreated: state => {\n      onCreated == null ? void 0 : onCreated(state);\n      createXRButton('AR', state.gl, sessionInit);\n    }\n  }, rest), children);\n}\nconst useXR = () => {\n  const xrValue = React.useContext(XRContext);\n  const interactionsValue = React.useContext(InteractionsContext);\n  const contextValue = React.useMemo(() => ({ ...xrValue,\n    ...interactionsValue\n  }), [xrValue, interactionsValue]);\n  return contextValue;\n};\nconst useXRFrame = callback => {\n  const {\n    gl\n  } = useThree();\n  const requestRef = React.useRef();\n  const previousTimeRef = React.useRef();\n  const loop = React.useCallback((time, xrFrame) => {\n    if (previousTimeRef.current !== undefined) {\n      callback(time, xrFrame);\n    }\n\n    previousTimeRef.current = time;\n    requestRef.current = gl.xr.getSession().requestAnimationFrame(loop);\n  }, [gl.xr, callback]);\n  React.useEffect(() => {\n    var _gl$xr;\n\n    if (!((_gl$xr = gl.xr) == null ? void 0 : _gl$xr.isPresenting)) {\n      return;\n    }\n\n    requestRef.current = gl.xr.getSession().requestAnimationFrame(loop);\n    return () => {\n      if (requestRef.current) {\n        gl.xr.getSession().cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [gl.xr.isPresenting, loop, gl.xr]);\n};\nconst useController = handedness => {\n  const {\n    controllers\n  } = useXR();\n  const controller = React.useMemo(() => controllers.find(it => it.inputSource.handedness === handedness), [handedness, controllers]);\n  return controller;\n};\n\nconst DEFAULT_PROFILES_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles';\nconst DEFAULT_PROFILE = 'generic-trigger';\n\nclass XRControllerModel extends Object3D {\n  constructor() {\n    super();\n    this.motionController = null;\n    this.envMap = null;\n  }\n\n  setEnvironmentMap(envMap) {\n    if (this.envMap == envMap) {\n      return this;\n    }\n\n    this.envMap = envMap;\n    this.traverse(child => {\n      if (child.isMesh) {\n        child.material.envMap = this.envMap;\n        child.material.needsUpdate = true;\n      }\n    });\n    return this;\n  }\n  /**\n   * Polls data from the XRInputSource and updates the model's components to match\n   * the real world data\n   */\n\n\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n    if (!this.motionController) return; // Cause the MotionController to poll the Gamepad for data\n\n    this.motionController.updateFromGamepad(); // Update the 3D model to reflect the button, thumbstick, and touchpad state\n\n    Object.values(this.motionController.components).forEach(component => {\n      // Update node data based on the visual responses' current states\n      Object.values(component.visualResponses).forEach(visualResponse => {\n        const {\n          valueNode,\n          minNode,\n          maxNode,\n          value,\n          valueNodeProperty\n        } = visualResponse; // Skip if the visual response node is not found. No error is needed,\n        // because it will have been reported at load time.\n\n        if (!valueNode) return; // Calculate the new properties based on the weight supplied\n\n        if (valueNodeProperty === Constants.VisualResponseProperty.VISIBILITY) {\n          valueNode.visible = value;\n        } else if (valueNodeProperty === Constants.VisualResponseProperty.TRANSFORM) {\n          valueNode.quaternion.slerpQuaternions(minNode.quaternion, maxNode.quaternion, value);\n          valueNode.position.lerpVectors(minNode.position, maxNode.position, value);\n        }\n      });\n    });\n  }\n\n}\n/**\n * Walks the model's tree to find the nodes needed to animate the components and\n * saves them to the motionContoller components for use in the frame loop. When\n * touchpads are found, attaches a touch dot to them.\n */\n\n\nfunction findNodes(motionController, scene) {\n  // Loop through the components and find the nodes needed for each components' visual responses\n  Object.values(motionController.components).forEach(component => {\n    const {\n      type,\n      touchPointNodeName,\n      visualResponses\n    } = component;\n\n    if (type === Constants.ComponentType.TOUCHPAD) {\n      component.touchPointNode = scene.getObjectByName(touchPointNodeName);\n\n      if (component.touchPointNode) {\n        // Attach a touch dot to the touchpad.\n        const sphereGeometry = new SphereGeometry(0.001);\n        const material = new MeshBasicMaterial({\n          color: 0x0000ff\n        });\n        const sphere = new Mesh(sphereGeometry, material);\n        component.touchPointNode.add(sphere);\n      } else {\n        console.warn(`Could not find touch dot, ${component.touchPointNodeName}, in touchpad component ${component.id}`);\n      }\n    } // Loop through all the visual responses to be applied to this component\n\n\n    Object.values(visualResponses).forEach(visualResponse => {\n      const {\n        valueNodeName,\n        minNodeName,\n        maxNodeName,\n        valueNodeProperty\n      } = visualResponse; // If animating a transform, find the two nodes to be interpolated between.\n\n      if (valueNodeProperty === Constants.VisualResponseProperty.TRANSFORM) {\n        visualResponse.minNode = scene.getObjectByName(minNodeName);\n        visualResponse.maxNode = scene.getObjectByName(maxNodeName); // If the extents cannot be found, skip this animation\n\n        if (!visualResponse.minNode) {\n          console.warn(`Could not find ${minNodeName} in the model`);\n          return;\n        }\n\n        if (!visualResponse.maxNode) {\n          console.warn(`Could not find ${maxNodeName} in the model`);\n          return;\n        }\n      } // If the target node cannot be found, skip this animation\n\n\n      visualResponse.valueNode = scene.getObjectByName(valueNodeName);\n\n      if (!visualResponse.valueNode) {\n        console.warn(`Could not find ${valueNodeName} in the model`);\n      }\n    });\n  });\n}\n\nfunction addAssetSceneToControllerModel(controllerModel, scene) {\n  // Find the nodes needed for animation and cache them on the motionController.\n  findNodes(controllerModel.motionController, scene); // Apply any environment map that the mesh already has set.\n\n  if (controllerModel.envMap) {\n    scene.traverse(child => {\n      if (child.isMesh) {\n        child.material.envMap = controllerModel.envMap;\n        child.material.needsUpdate = true;\n      }\n    });\n  } // Add the glTF scene to the controllerModel.\n\n\n  controllerModel.add(scene);\n}\n\nclass XRControllerModelFactory {\n  constructor(gltfLoader = null) {\n    this.gltfLoader = gltfLoader;\n    this.path = DEFAULT_PROFILES_PATH;\n    this._assetCache = {}; // If a GLTFLoader wasn't supplied to the constructor create a new one.\n\n    if (!this.gltfLoader) {\n      this.gltfLoader = new GLTFLoader();\n    }\n  }\n\n  createControllerModel(controller) {\n    const controllerModel = new XRControllerModel();\n    let scene = null;\n    controller.addEventListener('connected', event => {\n      const xrInputSource = event.data;\n      if (xrInputSource.targetRayMode !== 'tracked-pointer' || !xrInputSource.gamepad) return;\n      fetchProfile(xrInputSource, this.path, DEFAULT_PROFILE).then(({\n        profile,\n        assetPath\n      }) => {\n        controllerModel.motionController = new MotionController(xrInputSource, profile, assetPath);\n        const cachedAsset = this._assetCache[controllerModel.motionController.assetUrl];\n\n        if (cachedAsset) {\n          scene = cachedAsset.scene.clone();\n          addAssetSceneToControllerModel(controllerModel, scene);\n        } else {\n          if (!this.gltfLoader) {\n            throw new Error('GLTFLoader not set.');\n          }\n\n          this.gltfLoader.setPath('');\n          this.gltfLoader.load(controllerModel.motionController.assetUrl, asset => {\n            this._assetCache[controllerModel.motionController.assetUrl] = asset;\n            scene = asset.scene.clone();\n            addAssetSceneToControllerModel(controllerModel, scene);\n          }, null, () => {\n            throw new Error(`Asset ${controllerModel.motionController.assetUrl} missing or malformed.`);\n          });\n        }\n      }).catch(err => {\n        console.warn(err);\n      });\n    });\n    controller.addEventListener('disconnected', () => {\n      controllerModel.motionController = null;\n      controllerModel.remove(scene);\n      scene = null;\n    });\n    return controllerModel;\n  }\n\n}\n\nconst modelFactory = new XRControllerModelFactory();\nconst modelCache = new WeakMap();\nfunction DefaultXRControllers({\n  rayMaterial = {}\n}) {\n  const {\n    scene\n  } = useThree();\n  const {\n    controllers,\n    hoverState\n  } = useXR();\n  const [rays] = React__default.useState(new Map()); // Show ray line when hovering objects\n\n  useFrame(() => {\n    controllers.forEach(it => {\n      const ray = rays.get(it.controller.id);\n      if (!ray) return;\n      const intersection = hoverState[it.inputSource.handedness].values().next().value;\n\n      if (!intersection || it.inputSource.handedness === 'none') {\n        ray.visible = false;\n        return;\n      }\n\n      const rayLength = intersection.distance; // Tiny offset to clip ray on AR devices\n      // that don't have handedness set to 'none'\n\n      const offset = -0.01;\n      ray.visible = true;\n      ray.scale.y = rayLength + offset;\n      ray.position.z = -rayLength / 2 - offset;\n    });\n  });\n  useEffect(() => {\n    const cleanups = [];\n    controllers.forEach(({\n      controller,\n      grip,\n      inputSource\n    }) => {\n      // Attach 3D model of the controller\n      let model;\n\n      if (modelCache.has(controller)) {\n        model = modelCache.get(controller);\n      } else {\n        model = modelFactory.createControllerModel(controller);\n        controller.dispatchEvent({\n          type: 'connected',\n          data: inputSource,\n          fake: true\n        });\n        modelCache.set(controller, model);\n      }\n\n      grip.add(model); // Add Ray line (used for hovering)\n\n      const ray = new Mesh();\n      ray.rotation.set(Math.PI / 2, 0, 0);\n      ray.material = new MeshBasicMaterial({\n        color: new Color(0xffffff),\n        opacity: 0.8,\n        transparent: true,\n        ...rayMaterial\n      });\n      ray.geometry = new BoxBufferGeometry(0.002, 1, 0.002);\n      rays.set(controller.id, ray);\n      controller.add(ray);\n      cleanups.push(() => {\n        grip.remove(model);\n        controller.remove(ray);\n        rays.delete(controller.id);\n      });\n    });\n    return () => {\n      cleanups.forEach(fn => fn());\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [controllers, scene, rays, JSON.stringify(rayMaterial)]);\n  return null;\n}\n\nconst DEFAULT_HAND_PROFILE_PATH = 'https://cdn.jsdelivr.net/npm/@webxr-input-profiles/assets@1.0/dist/profiles/generic-hand/';\n\nclass XRHandMeshModel {\n  constructor(handModel, controller, path, handedness, customModel) {\n    this.controller = controller;\n    this.handModel = handModel;\n    this.bones = [];\n    const loader = new GLTFLoader();\n    if (!customModel) loader.setPath(path || DEFAULT_HAND_PROFILE_PATH);\n    loader.load(customModel != null ? customModel : `${handedness}.glb`, gltf => {\n      const object = gltf.scene.children[0];\n      this.handModel.add(object);\n      const mesh = object.getObjectByProperty('type', 'SkinnedMesh');\n      mesh.frustumCulled = false;\n      mesh.castShadow = true;\n      mesh.receiveShadow = true;\n      mesh.material.side = 0; // Workaround: force FrontSide\n\n      const joints = ['wrist', 'thumb-metacarpal', 'thumb-phalanx-proximal', 'thumb-phalanx-distal', 'thumb-tip', 'index-finger-metacarpal', 'index-finger-phalanx-proximal', 'index-finger-phalanx-intermediate', 'index-finger-phalanx-distal', 'index-finger-tip', 'middle-finger-metacarpal', 'middle-finger-phalanx-proximal', 'middle-finger-phalanx-intermediate', 'middle-finger-phalanx-distal', 'middle-finger-tip', 'ring-finger-metacarpal', 'ring-finger-phalanx-proximal', 'ring-finger-phalanx-intermediate', 'ring-finger-phalanx-distal', 'ring-finger-tip', 'pinky-finger-metacarpal', 'pinky-finger-phalanx-proximal', 'pinky-finger-phalanx-intermediate', 'pinky-finger-phalanx-distal', 'pinky-finger-tip'];\n      joints.forEach(jointName => {\n        const bone = object.getObjectByName(jointName);\n\n        if (bone !== undefined) {\n          bone.jointName = jointName;\n        } else {\n          console.warn(`Couldn't find ${jointName} in ${handedness} hand mesh`);\n        }\n\n        this.bones.push(bone);\n      });\n    });\n  }\n\n  updateMesh() {\n    // XR Joints\n    const XRJoints = this.controller.joints;\n\n    for (let i = 0; i < this.bones.length; i++) {\n      const bone = this.bones[i];\n\n      if (bone) {\n        const XRJoint = XRJoints[bone.jointName];\n\n        if (XRJoint.visible) {\n          const position = XRJoint.position;\n\n          if (bone) {\n            bone.position.copy(position);\n            bone.quaternion.copy(XRJoint.quaternion); // bone.scale.setScalar( XRJoint.jointRadius || defaultRadius );\n          }\n        }\n      }\n    }\n  }\n\n}\n\nconst TOUCH_RADIUS = 0.01;\nconst POINTING_JOINT = 'index-finger-tip';\n\nclass HandModel extends Object3D {\n  constructor(controller, customModels) {\n    super();\n    this.controller = controller;\n    this.motionController = null;\n    this.envMap = null;\n    this.mesh = null;\n    controller.addEventListener('connected', event => {\n      const xrInputSource = event.data;\n\n      if (xrInputSource.hand && !this.motionController) {\n        this.xrInputSource = xrInputSource;\n        this.motionController = new XRHandMeshModel(this, controller, this.path, xrInputSource.handedness, xrInputSource.handedness === \"left\" ? customModels[0] : customModels[1]);\n      }\n    });\n    controller.addEventListener('disconnected', () => {\n      this.clear();\n      this.motionController = null;\n    });\n  }\n\n  updateMatrixWorld(force) {\n    super.updateMatrixWorld(force);\n\n    if (this.motionController) {\n      this.motionController.updateMesh();\n    }\n  }\n\n  getPointerPosition() {\n    const indexFingerTip = this.controller.joints[POINTING_JOINT];\n\n    if (indexFingerTip) {\n      return indexFingerTip.position;\n    } else {\n      return null;\n    }\n  }\n\n  intersectBoxObject(boxObject) {\n    const pointerPosition = this.getPointerPosition();\n\n    if (pointerPosition) {\n      const indexSphere = new Sphere(pointerPosition, TOUCH_RADIUS);\n      const box = new Box3().setFromObject(boxObject);\n      return indexSphere.intersectsBox(box);\n    } else {\n      return false;\n    }\n  }\n\n  checkButton(button) {\n    if (this.intersectBoxObject(button)) {\n      button.onPress();\n    } else {\n      button.onClear();\n    }\n\n    if (button.isPressed()) {\n      button.whilePressed();\n    }\n  }\n\n}\n\nfunction Hands(props) {\n  const {\n    scene,\n    gl\n  } = useThree();\n  const {\n    controllers\n  } = useXR();\n  useEffect(() => {\n    controllers.forEach(({\n      hand,\n      inputSource\n    }) => {\n      const handModel = hand.children.find(child => child instanceof HandModel);\n\n      if (handModel === undefined) {\n        hand.add(new HandModel(hand, [props.modelLeft, props.modelRight])); // throwing fake event for the Oculus Hand Model so it starts loading\n\n        hand.dispatchEvent({\n          type: 'connected',\n          data: inputSource,\n          fake: true\n        });\n      }\n    });\n  }, [scene, gl, controllers]);\n  return null;\n}\n\nexport { ARCanvas, DefaultXRControllers, Hands, InteractionManager, InteractionsContext, Interactive, RayGrab, VRCanvas, XR, XRController, useController, useHitTest, useInteraction, useXR, useXREvent, useXRFrame };\n"]},"metadata":{},"sourceType":"module"}