{"ast":null,"code":"import _objectSpread from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _objectWithoutProperties from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js\";\nvar _excluded = [\"url\", \"animation\"];\n\nvar _jsxFileName = \"/Users/lordokami/lordokami/lost-my-keys-vr/src/components/Duck.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useGLTF } from \"../hooks/useModel\";\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\";\nimport { useGraph } from '@react-three/fiber';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar glbUrl = \"/objects/duck.glb\";\n\nvar Duck = function Duck(_ref) {\n  _s();\n\n  var url = _ref.url,\n      animation = _ref.animation,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  var _useGLTF = useGLTF(glbUrl),\n      scene = _useGLTF.scene,\n      materials = _useGLTF.materials,\n      animations = _useGLTF.animations;\n\n  var clone = useMemo(function () {\n    return SkeletonUtils.clone(scene);\n  }, [scene]);\n\n  var _useGraph = useGraph(clone),\n      nodes = _useGraph.nodes;\n\n  return /*#__PURE__*/_jsxDEV(\"primitive\", _objectSpread({\n    object: nodes,\n    dispose: null\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Duck, \"n+hGNaIZXEWlz4WxOmqm1yf9jgg=\", false, function () {\n  return [useGLTF, useGraph];\n});\n\n_c = Duck;\nexport default Duck;\n\nvar _c;\n\n$RefreshReg$(_c, \"Duck\");","map":{"version":3,"sources":["/Users/lordokami/lordokami/lost-my-keys-vr/src/components/Duck.js"],"names":["useGLTF","SkeletonUtils","useGraph","glbUrl","Duck","url","animation","props","scene","materials","animations","clone","useMemo","nodes"],"mappings":";;;;;;;;AAAA,SAASA,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,QAA8B,wCAA9B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,IAAMC,MAAM,GAAG,mBAAf;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAkC;AAAA;;AAAA,MAA/BC,GAA+B,QAA/BA,GAA+B;AAAA,MAA1BC,SAA0B,QAA1BA,SAA0B;AAAA,MAAZC,KAAY;;AAC7C,iBAAyCP,OAAO,CAACG,MAAD,CAAhD;AAAA,MAAQK,KAAR,YAAQA,KAAR;AAAA,MAAeC,SAAf,YAAeA,SAAf;AAAA,MAA0BC,UAA1B,YAA0BA,UAA1B;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAAC;AAAA,WAAMX,aAAa,CAACU,KAAd,CAAoBH,KAApB,CAAN;AAAA,GAAD,EAAmC,CAACA,KAAD,CAAnC,CAArB;;AACA,kBAAkBN,QAAQ,CAACS,KAAD,CAA1B;AAAA,MAAQE,KAAR,aAAQA,KAAR;;AAEA,sBACE;AAAW,IAAA,MAAM,EAAEA,KAAnB;AAA0B,IAAA,OAAO,EAAE;AAAnC,KAA6CN,KAA7C;AAAA;AAAA;AAAA;AAAA,WADF;AAGD,CARD;;GAAMH,I;UACqCJ,O,EAEvBE,Q;;;KAHdE,I;AAUN,eAAeA,IAAf","sourcesContent":["import { useGLTF } from \"../hooks/useModel\";\nimport { SkeletonUtils } from \"three/examples/jsm/utils/SkeletonUtils\"\nimport { useGraph } from '@react-three/fiber'\n\nconst glbUrl = \"/objects/duck.glb\";\n\nconst Duck = ({ url, animation, ...props }) => {\n  const { scene, materials, animations } = useGLTF(glbUrl);\n  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);\n  const { nodes } = useGraph(clone);\n\n  return (\n    <primitive object={nodes} dispose={null} {...props} />\n  );\n};\n\nexport default Duck;\n"]},"metadata":{},"sourceType":"module"}