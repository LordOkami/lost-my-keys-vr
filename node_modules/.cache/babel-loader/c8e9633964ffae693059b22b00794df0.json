{"ast":null,"code":"import _slicedToArray from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/Users/lordokami/lordokami/lost-my-keys-vr/src/components/Interaction/TeleportTravel.js\",\n    _s = $RefreshSig$();\n\nimport { Raycaster, Vector3 } from 'three';\nimport { useXR, Interactive } from '@react-three/xr';\nimport { useFrame } from '@react-three/fiber';\nimport { useCallback, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function TeleportIndicator(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pointLight\", {\n      position: [0, 0.5, 0],\n      args: [0xff00ff, 2, 0.6]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      position: [0, 0.25, 0],\n      children: [/*#__PURE__*/_jsxDEV(\"coneBufferGeometry\", {\n        args: [0.1, 0.5, 6],\n        attach: \"geometry\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"meshBasicMaterial\", {\n        attach: \"material\",\n        color: 0xff00ff\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n_c = TeleportIndicator;\nexport default function TeleportTravel(props) {\n  _s();\n\n  var centerOnTeleport = props.centerOnTeleport,\n      _props$Indicator = props.Indicator,\n      Indicator = _props$Indicator === void 0 ? TeleportIndicator : _props$Indicator,\n      _props$useNormal = props.useNormal,\n      useNormal = _props$useNormal === void 0 ? true : _props$useNormal;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isHovered = _useState2[0],\n      setIsHovered = _useState2[1];\n\n  var target = useRef();\n  var targetLoc = useRef();\n  var ray = useRef(new Raycaster());\n  var rayDir = useRef({\n    pos: new Vector3(),\n    dir: new Vector3()\n  });\n\n  var _useXR = useXR(),\n      controllers = _useXR.controllers,\n      player = _useXR.player;\n\n  useFrame(function () {\n    if (isHovered && controllers.length > 0 && ray.current && target.current && targetLoc.current) {\n      controllers[0].controller.getWorldDirection(rayDir.current.dir);\n      controllers[0].controller.getWorldPosition(rayDir.current.pos);\n      rayDir.current.dir.multiplyScalar(-1);\n      ray.current.set(rayDir.current.pos, rayDir.current.dir);\n\n      var _ray$current$intersec = ray.current.intersectObject(target.current),\n          _ray$current$intersec2 = _slicedToArray(_ray$current$intersec, 1),\n          intersection = _ray$current$intersec2[0];\n\n      if (intersection) {\n        if (useNormal) {\n          var p = intersection.point;\n          targetLoc.current.position.set(0, 0, 0);\n          var n = intersection.face.normal.clone();\n          n.transformDirection(intersection.object.matrixWorld);\n          targetLoc.current.lookAt(n);\n          targetLoc.current.rotateOnAxis(new Vector3(1, 0, 0), Math.PI / 2);\n          targetLoc.current.position.copy(p);\n        } else {\n          targetLoc.current.position.copy(intersection.point);\n        }\n      }\n    }\n  });\n  var click = useCallback(function () {\n    if (isHovered) {\n      player.position.copy(targetLoc.current.position);\n\n      if (useNormal) {\n        player.rotation.copy(targetLoc.current.rotation);\n      }\n    }\n  }, [centerOnTeleport, isHovered, useNormal]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isHovered && /*#__PURE__*/_jsxDEV(\"group\", {\n      ref: targetLoc,\n      children: /*#__PURE__*/_jsxDEV(Indicator, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Interactive, {\n      onSelect: click,\n      onHover: function onHover() {\n        return setIsHovered(true);\n      },\n      onBlur: function onBlur() {\n        return setIsHovered(false);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"group\", {\n        ref: target,\n        children: props.children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TeleportTravel, \"RNqcAk/8J3QvuqgbCbGnFjsJErI=\", false, function () {\n  return [useXR, useFrame];\n});\n\n_c2 = TeleportTravel;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TeleportIndicator\");\n$RefreshReg$(_c2, \"TeleportTravel\");","map":{"version":3,"sources":["/Users/lordokami/lordokami/lost-my-keys-vr/src/components/Interaction/TeleportTravel.js"],"names":["Raycaster","Vector3","useXR","Interactive","useFrame","useCallback","useRef","useState","TeleportIndicator","props","TeleportTravel","centerOnTeleport","Indicator","useNormal","isHovered","setIsHovered","target","targetLoc","ray","rayDir","pos","dir","controllers","player","length","current","controller","getWorldDirection","getWorldPosition","multiplyScalar","set","intersectObject","intersection","p","point","position","n","face","normal","clone","transformDirection","object","matrixWorld","lookAt","rotateOnAxis","Math","PI","copy","click","rotation","children"],"mappings":"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","sourcesContent":["import { Raycaster, Vector3 } from 'three';\r\n\r\nimport { useXR, Interactive } from '@react-three/xr';\r\nimport { useFrame } from '@react-three/fiber';\r\nimport { useCallback, useRef, useState } from 'react';\r\n\r\nexport function TeleportIndicator(props) {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<pointLight position={[0, 0.5, 0]} args={[0xff00ff, 2, 0.6]} />\r\n\t\t\t<mesh position={[0, 0.25, 0]}>\r\n\t\t\t\t<coneBufferGeometry args={[0.1, 0.5, 6]} attach=\"geometry\" />\r\n\t\t\t\t<meshBasicMaterial attach=\"material\" color={0xff00ff} />\r\n\t\t\t</mesh>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default function TeleportTravel(props) {\r\n\tconst {\r\n\t\tcenterOnTeleport,\r\n\t\tIndicator = TeleportIndicator,\r\n\t\tuseNormal = true,\r\n\t} = props;\r\n\tconst [isHovered, setIsHovered] = useState(false);\r\n\tconst target = useRef();\r\n\tconst targetLoc = useRef();\r\n\tconst ray = useRef(new Raycaster());\r\n\r\n\tconst rayDir = useRef({\r\n\t\tpos: new Vector3(),\r\n\t\tdir: new Vector3(),\r\n\t});\r\n\r\n\tconst { controllers, player } = useXR();\r\n\r\n\tuseFrame(() => {\r\n\t\tif (\r\n\t\t\tisHovered &&\r\n\t\t\tcontrollers.length > 0 &&\r\n\t\t\tray.current &&\r\n\t\t\ttarget.current &&\r\n\t\t\ttargetLoc.current\r\n\t\t) {\r\n\t\t\tcontrollers[0].controller.getWorldDirection(rayDir.current.dir);\r\n\t\t\tcontrollers[0].controller.getWorldPosition(rayDir.current.pos);\r\n\t\t\trayDir.current.dir.multiplyScalar(-1);\r\n\t\t\tray.current.set(rayDir.current.pos, rayDir.current.dir);\r\n\r\n\t\t\tconst [intersection] = ray.current.intersectObject(target.current);\r\n\r\n\t\t\tif (intersection) {\r\n\t\t\t\tif (useNormal) {\r\n\t\t\t\t\tconst p = intersection.point;\r\n\r\n\t\t\t\t\ttargetLoc.current.position.set(0, 0, 0);\r\n\r\n\t\t\t\t\tconst n = intersection.face.normal.clone();\r\n\t\t\t\t\tn.transformDirection(intersection.object.matrixWorld);\r\n\r\n\t\t\t\t\ttargetLoc.current.lookAt(n);\r\n\t\t\t\t\ttargetLoc.current.rotateOnAxis(new Vector3(1, 0, 0), Math.PI / 2);\r\n\t\t\t\t\ttargetLoc.current.position.copy(p);\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttargetLoc.current.position.copy(intersection.point);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t});\r\n\r\n\tconst click = useCallback(() => {\r\n\t\tif (isHovered) {\r\n\t\t\tplayer.position.copy(targetLoc.current.position);\r\n\t\t\tif (useNormal) {\r\n\t\t\t\tplayer.rotation.copy(targetLoc.current.rotation);\r\n\t\t\t}\r\n\t\t}\r\n\t}, [centerOnTeleport, isHovered, useNormal]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{isHovered && (\r\n\t\t\t\t<group ref={targetLoc}>\r\n\t\t\t\t\t<Indicator />\r\n\t\t\t\t</group>\r\n\t\t\t)}\r\n\t\t\t<Interactive\r\n\t\t\t\tonSelect={click}\r\n\t\t\t\tonHover={() => setIsHovered(true)}\r\n\t\t\t\tonBlur={() => setIsHovered(false)}>\r\n\t\t\t\t<group ref={target}>{props.children}</group>\r\n\t\t\t</Interactive>\r\n\t\t</>\r\n\t);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}