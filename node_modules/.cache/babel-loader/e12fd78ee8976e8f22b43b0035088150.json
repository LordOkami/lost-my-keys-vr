{"ast":null,"code":"import _slicedToArray from \"/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nvar isOrthographic = function isOrthographic(def) {\n  return def && def.isOrthographicCamera;\n};\n\nvar context = /*#__PURE__*/React.createContext(null);\n\nfunction Bounds(_ref) {\n  var children = _ref.children,\n      _ref$damping = _ref.damping,\n      damping = _ref$damping === void 0 ? 6 : _ref$damping,\n      fit = _ref.fit,\n      clip = _ref.clip,\n      _ref$margin = _ref.margin,\n      margin = _ref$margin === void 0 ? 1.2 : _ref$margin,\n      _ref$eps = _ref.eps,\n      eps = _ref$eps === void 0 ? 0.01 : _ref$eps;\n  var ref = React.useRef(null);\n  var camera = useThree(function (state) {\n    return state.camera;\n  }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  var controls = useThree(function (state) {\n    return state.controls;\n  });\n  var invalidate = useThree(function (state) {\n    return state.invalidate;\n  });\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  var _React$useState = React.useState(function () {\n    return {\n      animating: false,\n      focus: new THREE.Vector3(),\n      camera: new THREE.Vector3(),\n      zoom: 1\n    };\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 1),\n      current = _React$useState2[0];\n\n  var _React$useState3 = React.useState(function () {\n    return {\n      focus: new THREE.Vector3(),\n      camera: new THREE.Vector3(),\n      zoom: 1\n    };\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 1),\n      goal = _React$useState4[0];\n\n  var api = React.useMemo(function () {\n    var box = new THREE.Box3();\n\n    function getSize() {\n      var size = box.getSize(new THREE.Vector3());\n      var center = box.getCenter(new THREE.Vector3());\n      var maxSize = Math.max(size.x, size.y, size.z);\n      var fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      var fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      var distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        size: size,\n        center: center,\n        distance: distance\n      };\n    }\n\n    return {\n      getSize: getSize,\n      refresh: function refresh(object) {\n        box.setFromObject(object || ref.current);\n        return this;\n      },\n      clip: function clip() {\n        var _getSize = getSize(),\n            distance = _getSize.distance;\n\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n      fit: function fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n\n        var _getSize2 = getSize(),\n            center = _getSize2.center,\n            distance = _getSize2.distance;\n\n        var direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          var maxHeight = 0,\n              maxWidth = 0;\n          var vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (var _i = 0, _vertices = vertices; _i < _vertices.length; _i++) {\n            var v = _vertices[_i];\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          var zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          var zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n\n          invalidate();\n        }\n\n        return this;\n      }\n    };\n  }, [camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(function () {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n\n    if (controls) {\n      // Try to prevent drag hijacking\n      var callback = function callback(event) {\n        return current.animating = false;\n      };\n\n      controls.addEventListener('start', callback);\n      return function () {\n        return controls.removeEventListener('start', callback);\n      };\n    }\n  }, [api, fit, controls]);\n  useFrame(function (state, delta) {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };","map":{"version":3,"sources":["/Users/lordokami/lordokami/lost-my-keys-vr/node_modules/@react-three/drei/core/Bounds.js"],"names":["React","THREE","useThree","useFrame","isOrthographic","def","isOrthographicCamera","context","createContext","Bounds","children","damping","fit","clip","margin","eps","ref","useRef","camera","state","controls","invalidate","equals","a","b","Math","abs","x","y","z","damp","v","t","lambda","delta","MathUtils","useState","animating","focus","Vector3","zoom","current","goal","api","useMemo","box","Box3","getSize","size","center","getCenter","maxSize","max","fitHeightDistance","atan","PI","fov","fitWidthDistance","aspect","distance","refresh","object","setFromObject","maxDistance","near","far","updateProjectionMatrix","update","copy","position","target","direction","clone","sub","normalize","multiplyScalar","maxHeight","maxWidth","vertices","min","applyMatrix4","matrixWorldInverse","zoomForHeight","top","bottom","zoomForWidth","right","left","lookAt","useLayoutEffect","callback","event","addEventListener","removeEventListener","createElement","Provider","value","useBounds","useContext"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport * as THREE from 'three';\nimport { useThree, useFrame } from '@react-three/fiber';\n\nconst isOrthographic = def => def && def.isOrthographicCamera;\n\nconst context = /*#__PURE__*/React.createContext(null);\nfunction Bounds({\n  children,\n  damping = 6,\n  fit,\n  clip,\n  margin = 1.2,\n  eps = 0.01\n}) {\n  const ref = React.useRef(null);\n  const camera = useThree(state => state.camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const controls = useThree(state => state.controls);\n  const invalidate = useThree(state => state.invalidate);\n\n  function equals(a, b) {\n    return Math.abs(a.x - b.x) < eps && Math.abs(a.y - b.y) < eps && Math.abs(a.z - b.z) < eps;\n  }\n\n  function damp(v, t, lambda, delta) {\n    v.x = THREE.MathUtils.damp(v.x, t.x, lambda, delta);\n    v.y = THREE.MathUtils.damp(v.y, t.y, lambda, delta);\n    v.z = THREE.MathUtils.damp(v.z, t.z, lambda, delta);\n  }\n\n  const [current] = React.useState(() => ({\n    animating: false,\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const [goal] = React.useState(() => ({\n    focus: new THREE.Vector3(),\n    camera: new THREE.Vector3(),\n    zoom: 1\n  }));\n  const api = React.useMemo(() => {\n    const box = new THREE.Box3();\n\n    function getSize() {\n      const size = box.getSize(new THREE.Vector3());\n      const center = box.getCenter(new THREE.Vector3());\n      const maxSize = Math.max(size.x, size.y, size.z);\n      const fitHeightDistance = isOrthographic(camera) ? maxSize * 4 : maxSize / (2 * Math.atan(Math.PI * camera.fov / 360));\n      const fitWidthDistance = isOrthographic(camera) ? maxSize * 4 : fitHeightDistance / camera.aspect;\n      const distance = margin * Math.max(fitHeightDistance, fitWidthDistance);\n      return {\n        size,\n        center,\n        distance\n      };\n    }\n\n    return {\n      getSize,\n\n      refresh(object) {\n        box.setFromObject(object || ref.current);\n        return this;\n      },\n\n      clip() {\n        const {\n          distance\n        } = getSize();\n        if (controls) controls.maxDistance = distance * 10;\n        camera.near = distance / 100;\n        camera.far = distance * 100;\n        camera.updateProjectionMatrix();\n        if (controls) controls.update();\n        return this;\n      },\n\n      fit() {\n        current.camera.copy(camera.position);\n        if (controls) current.focus.copy(controls.target);\n        const {\n          center,\n          distance\n        } = getSize();\n        const direction = center.clone().sub(camera.position).normalize().multiplyScalar(distance);\n        goal.camera.copy(center).sub(direction);\n        goal.focus.copy(center);\n\n        if (isOrthographic(camera)) {\n          current.zoom = camera.zoom;\n          let maxHeight = 0,\n              maxWidth = 0;\n          const vertices = [new THREE.Vector3(box.min.x, box.min.y, box.min.z), new THREE.Vector3(box.min.x, box.max.y, box.min.z), new THREE.Vector3(box.min.x, box.min.y, box.max.z), new THREE.Vector3(box.min.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.max.z), new THREE.Vector3(box.max.x, box.max.y, box.min.z), new THREE.Vector3(box.max.x, box.min.y, box.max.z), new THREE.Vector3(box.max.x, box.min.y, box.min.z)]; // Transform the center and each corner to camera space\n\n          center.applyMatrix4(camera.matrixWorldInverse);\n\n          for (const v of vertices) {\n            v.applyMatrix4(camera.matrixWorldInverse);\n            maxHeight = Math.max(maxHeight, Math.abs(v.y - center.y));\n            maxWidth = Math.max(maxWidth, Math.abs(v.x - center.x));\n          }\n\n          maxHeight *= 2;\n          maxWidth *= 2;\n          const zoomForHeight = (camera.top - camera.bottom) / maxHeight;\n          const zoomForWidth = (camera.right - camera.left) / maxWidth;\n          goal.zoom = Math.min(zoomForHeight, zoomForWidth) / margin;\n\n          if (!damping) {\n            camera.zoom = goal.zoom;\n            camera.updateProjectionMatrix();\n          }\n        }\n\n        if (damping) {\n          current.animating = true;\n        } else {\n          camera.position.copy(goal.camera);\n          camera.lookAt(goal.focus);\n\n          if (controls) {\n            controls.target.copy(goal.focus);\n            controls.update();\n          }\n\n          invalidate();\n        }\n\n        return this;\n      }\n\n    };\n  }, [camera, controls, margin, damping, invalidate]);\n  React.useLayoutEffect(() => {\n    api.refresh();\n    if (fit) api.fit();\n    if (clip) api.clip();\n\n    if (controls) {\n      // Try to prevent drag hijacking\n      const callback = event => current.animating = false;\n\n      controls.addEventListener('start', callback);\n      return () => controls.removeEventListener('start', callback);\n    }\n  }, [api, fit, controls]);\n  useFrame((state, delta) => {\n    if (current.animating) {\n      damp(current.focus, goal.focus, damping, delta);\n      damp(current.camera, goal.camera, damping, delta);\n      current.zoom = THREE.MathUtils.damp(current.zoom, goal.zoom, damping, delta);\n      camera.position.copy(current.camera);\n\n      if (isOrthographic(camera)) {\n        camera.zoom = current.zoom;\n        camera.updateProjectionMatrix();\n      }\n\n      if (!controls) {\n        camera.lookAt(current.focus);\n      } else {\n        controls.target.copy(current.focus);\n        controls.update();\n      }\n\n      invalidate();\n      if (isOrthographic(camera) && !(Math.abs(current.zoom - goal.zoom) < eps)) return;\n      if (!isOrthographic(camera) && !equals(current.camera, goal.camera)) return;\n      if (controls && !equals(current.focus, goal.focus)) return;\n      current.animating = false;\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"group\", {\n    ref: ref\n  }, /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\nfunction useBounds() {\n  return React.useContext(context);\n}\n\nexport { Bounds, useBounds };\n"]},"metadata":{},"sourceType":"module"}